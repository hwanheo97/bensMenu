{"ast":null,"code":"import _slicedToArray from\"C:\\\\bensMenu\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import axios from'axios';import ProductImage from'./Sections/ProductImage';import ProductInfo from'./Sections/ProductInfo';import{Row,Col}from'antd';function DetailProductPage(props){var productId=props.match.params.productId;// productId는 각 image의 unitque id, &type=single 하나만 가져오기\n// 초기화 객체화 {}\nvar _useState=useState({}),_useState2=_slicedToArray(_useState,2),Product=_useState2[0],setProduct=_useState2[1];useEffect(function(){axios.get(\"/api/product/products_by_id?id=\".concat(productId,\"&type=single\")).then(function(response){setProduct(response.data[0]);}).catch(function(err){return alert(err);});//     if(response.data.success){\n//         console.log('DetailPage => response.data ',response.data)\n//         setProduct(response.data.product[0])\n//     }else{\n//         alert('상세 정보 가져오기를 실패했습니다.')\n//     }\n// })\n// 2) redux 안 간단하게  if(){}안에 setProduct(response.data[0])  <= (response.data.product[0])\n},[]);return/*#__PURE__*/React.createElement(\"div\",{style:{width:'100%',padding:'3rem 4rem'}},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',justifyContent:'center'}},/*#__PURE__*/React.createElement(\"h1\",null,Product.title)),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Row,{gutter:[16,16]},/*#__PURE__*/React.createElement(Col,{lg:12,sm:24},/*#__PURE__*/React.createElement(ProductImage,{detail:Product})),/*#__PURE__*/React.createElement(Col,{lg:12,sm:24},/*#__PURE__*/React.createElement(ProductInfo,{detail:Product}))));}export default DetailProductPage;","map":{"version":3,"sources":["C:/bensMenu/client/src/components/views/DetailProductPage/DetailProductPage.js"],"names":["React","useEffect","useState","axios","ProductImage","ProductInfo","Row","Col","DetailProductPage","props","productId","match","params","Product","setProduct","get","then","response","data","catch","err","alert","width","padding","display","justifyContent","title"],"mappings":"gJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA0BC,QAA1B,KAA0C,OAA1C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,OAAQC,GAAR,CAAYC,GAAZ,KAAuB,MAAvB,CAEA,QAASC,CAAAA,iBAAT,CAA2BC,KAA3B,CAAkC,CAE9B,GAAMC,CAAAA,SAAS,CAAED,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,SAApC,CACA;AAEA;AAL8B,cAMDR,QAAQ,CAAC,EAAD,CANP,wCAMvBW,OANuB,eAMfC,UANe,eAQ9Bb,SAAS,CAAC,UAAI,CACVE,KAAK,CAACY,GAAN,0CAA4CL,SAA5C,kBACKM,IADL,CACU,SAAAC,QAAQ,CAAG,CACbH,UAAU,CAACG,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAV,CACH,CAHL,EAIKC,KAJL,CAIW,SAAAC,GAAG,QAAKC,CAAAA,KAAK,CAACD,GAAD,CAAV,EAJd,EAKI;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEN,CAhBO,CAgBN,EAhBM,CAAT,CAkBF,mBACE,2BAAK,KAAK,CAAE,CAACE,KAAK,CAAC,MAAP,CAAeC,OAAO,CAAC,WAAvB,CAAZ,eACI,2BAAK,KAAK,CAAE,CAACC,OAAO,CAAC,MAAT,CAAiBC,cAAc,CAAC,QAAhC,CAAZ,eACI,8BAAKZ,OAAO,CAACa,KAAb,CADJ,CADJ,cAII,8BAJJ,cAMI,oBAAC,GAAD,EAAK,MAAM,CAAE,CAAC,EAAD,CAAI,EAAJ,CAAb,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAE,EAAjB,eAEI,oBAAC,YAAD,EAAc,MAAM,CAAEb,OAAtB,EAFJ,CADJ,cAMI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAE,EAAjB,eAEI,oBAAC,WAAD,EAAa,MAAM,CAAEA,OAArB,EAFJ,CANJ,CANJ,CADF,CAsBD,CAED,cAAeL,CAAAA,iBAAf","sourcesContent":["import React, { useEffect,useState } from 'react'\r\nimport axios from 'axios'\r\nimport ProductImage from './Sections/ProductImage'\r\nimport ProductInfo from './Sections/ProductInfo'\r\nimport {Row,Col}  from 'antd'\r\n\r\nfunction DetailProductPage(props) {\r\n\r\n    const productId =props.match.params.productId\r\n    // productId는 각 image의 unitque id, &type=single 하나만 가져오기\r\n\r\n    // 초기화 객체화 {}\r\n    const [Product,setProduct] = useState({})\r\n\r\n    useEffect(()=>{\r\n        axios.get(`/api/product/products_by_id?id=${productId}&type=single`)\r\n            .then(response =>{\r\n                setProduct(response.data[0])\r\n            })\r\n            .catch(err  => alert(err) )\r\n            //     if(response.data.success){\r\n            //         console.log('DetailPage => response.data ',response.data)\r\n            //         setProduct(response.data.product[0])\r\n            //     }else{\r\n            //         alert('상세 정보 가져오기를 실패했습니다.')\r\n            //     }\r\n            // })\r\n\r\n            // 2) redux 안 간단하게  if(){}안에 setProduct(response.data[0])  <= (response.data.product[0])\r\n            \r\n     },[])\r\n\r\n  return (\r\n    <div style={{width:'100%', padding:'3rem 4rem'}}>\r\n        <div style={{display:'flex', justifyContent:'center'}}>\r\n            <h1>{Product.title}</h1>\r\n        </div>\r\n        <br/>\r\n\r\n        <Row gutter={[16,16]}>\r\n            <Col lg={12} sm={24}>\r\n                {/* ProductImage  ,   detail 안에 모든 Product정보 넣기, lg 는 12로 두개로 나누기 */}\r\n                <ProductImage detail={Product} />\r\n            </Col>\r\n            \r\n            <Col lg={12} sm={24}>\r\n                {/* ProductInfo */}\r\n                <ProductInfo detail={Product} />\r\n            </Col>\r\n\r\n        </Row>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailProductPage\r\n"]},"metadata":{},"sourceType":"module"}