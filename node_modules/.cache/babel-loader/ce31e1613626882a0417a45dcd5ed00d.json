{"ast":null,"code":"var _jsxFileName = \"C:\\\\boilerplate-mern-stack-master\\\\client\\\\src\\\\components\\\\views\\\\LandingPage\\\\LandingPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { FaCode } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { Icon, Col, Card, Row, Carousel } from 'antd';\nimport Meta from 'antd/lib/card/Meta';\nimport ImageSlider from '../../utils/ImageSlider';\nimport CheckBox from './Sections/CheckBox';\nimport RadioBox from './Sections/RadioBox';\nimport SearchFeature from './Sections/SearchFeature';\nimport { continents, price } from './Sections/Datas';\n\nfunction LandingPage() {\n  const [Products, setProducts] = useState([]);\n  const [Skip, setSkip] = useState(0);\n  const [Limit, setLimit] = useState(8);\n  const [PostSize, setPostSize] = useState(0); //Filters  두개의 배열로 초기 state\n\n  const [Filters, setFilters] = useState({\n    continents: [],\n    price: []\n  });\n  const [SearchTerm, setSearchTerm] = useState(\" \");\n  useEffect(() => {\n    //body에 넣어 request로 같이 보내기\n    let body = {\n      skip: Skip,\n      limit: Limit\n    }; //함수화 하여 호출\n\n    getProducts(body);\n  }, []);\n\n  const getProducts = body => {\n    axios.post('/api/product/products', body).then(response => {\n      if (response.data.success) {\n        // console.log(response.data)\n        //원래있는 product를모두 넣고 , 추가의미\n        if (body.loadMore) {\n          setProducts([...Products, ...response.data.productInfo]);\n        } else {\n          setProducts(response.data.productInfo);\n        }\n\n        setPostSize(response.data.postSize);\n      } else {\n        alert(\"상품들을 가져오는데 실패 했습니다.\");\n      }\n    });\n  }; //더보기 버튼 이벤트\n\n\n  const loadMoreHandler = () => {\n    //더보기 버튼 누르면 0 + 8\n    let skip = Skip + Limit; //  loadMore:true  더보기 눌렀을때 정보 추가하여 보내기\n\n    let body = {\n      skip: skip,\n      limit: Limit,\n      loadMore: true\n    }; //\n\n    getProducts(body); //증가되는 skip setState\n\n    setSkip(skip);\n  };\n\n  const renderCards = Products.map((product, index) => {\n    //console.log('product',product)\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 8,\n      xs: 24,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      cover: /*#__PURE__*/React.createElement(ImageSlider, {\n        images: product.images,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 32\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Meta, {\n      title: product.title,\n      description: `$${product.price}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    })));\n  });\n\n  const showFilteredResults = filters => {\n    let body = {\n      //db 에서 처음으로 값 가져오기 skip:0, Limit은 초기화 값 8 그대로\n      skip: 0,\n      limit: Limit,\n      filters: filters\n    }; //더보기 클릭시와 같이 관련값(upload된 것중) 가져오기 \n\n    getProducts(body);\n    setSkip(0);\n  };\n\n  const handlePrice = value => {\n    const data = price;\n    let array = []; //key  = 0,1,2,...\n\n    for (let key in data) {\n      if (data[key]._id === parseInt(value, 10)) {\n        //dada.js의 array,[0,199]등     \n        array = data[key].array;\n      }\n    }\n\n    return array;\n  }; // checked된 1,2, _id 가 filters에 담김\n\n\n  const handleFilters = (filters, category) => {\n    //모든 Filters를 newFilters로 복제\n    const newFilters = { ...Filters\n    }; // continents 나 price 배열을 가리킴, filters = _id값 [1,2,..] \n\n    newFilters[category] = filters;\n    console.log('filters', filters);\n\n    if (category === \"price\") {\n      let priceValues = handlePrice(filters);\n      newFilters[category] = priceValues; // priceValues [0,199]등  category = \"price\"\n    }\n\n    showFilteredResults(newFilters);\n    setFilters(newFilters); // continent, price 둘다표시되게\n  };\n\n  const updateSearchTerm = newSearchTerm => {\n    setSearchTerm(newSearchTerm);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '75%',\n      margin: '3rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, \" REACT\\uB85C \\uC1FC\\uD551\\uBAB0\\uB9CC\\uB4E4\\uAE30\", /*#__PURE__*/React.createElement(Icon, {\n    type: \"rocket\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 39\n    }\n  }), \" \")), /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 16],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CheckBox, {\n    list: continents,\n    handleFilters: filters => handleFilters(filters, \"continents\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(RadioBox, {\n    list: price,\n    handleFilters: filters => handleFilters(filters, \"price\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      margin: '1rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchFeature, {\n    refreshFunction: updateSearchTerm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 16],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, renderCards), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }), PostSize >= Limit && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: loadMoreHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 24\n    }\n  }, \"\\uB354\\uBCF4\\uAE30\")));\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["C:/boilerplate-mern-stack-master/client/src/components/views/LandingPage/LandingPage.js"],"names":["React","useEffect","useState","FaCode","axios","Icon","Col","Card","Row","Carousel","Meta","ImageSlider","CheckBox","RadioBox","SearchFeature","continents","price","LandingPage","Products","setProducts","Skip","setSkip","Limit","setLimit","PostSize","setPostSize","Filters","setFilters","SearchTerm","setSearchTerm","body","skip","limit","getProducts","post","then","response","data","success","loadMore","productInfo","postSize","alert","loadMoreHandler","renderCards","map","product","index","images","title","showFilteredResults","filters","handlePrice","value","array","key","_id","parseInt","handleFilters","category","newFilters","console","log","priceValues","updateSearchTerm","newSearchTerm","width","margin","textAlign","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { FaCode } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport {Icon,Col,Card,Row,Carousel} from 'antd'\nimport Meta from 'antd/lib/card/Meta';\nimport ImageSlider from '../../utils/ImageSlider';\nimport CheckBox from './Sections/CheckBox';\nimport RadioBox from './Sections/RadioBox';\nimport SearchFeature from './Sections/SearchFeature';\nimport { continents,price } from './Sections/Datas';\n\n\n\n\nfunction LandingPage() {\n\n    const [Products, setProducts]  =  useState([])\n    const [Skip,setSkip] = useState(0)\n    const [Limit,setLimit] = useState(8)\n    const [PostSize,setPostSize] = useState(0)\n    //Filters  두개의 배열로 초기 state\n    const [Filters,setFilters] = useState({\n        continents:[],\n        price: []\n    })\n    const [SearchTerm,setSearchTerm]  = useState(\" \")\n\n\n    useEffect(() => {\n       //body에 넣어 request로 같이 보내기\n        let body = {\n            skip:Skip,\n            limit:Limit\n        }\n        //함수화 하여 호출\n        getProducts(body)   \n    },[])\n    const getProducts = (body) =>{\n        axios.post('/api/product/products',body)\n            .then(response =>{\n                if(response.data.success){\n                   // console.log(response.data)\n                    //원래있는 product를모두 넣고 , 추가의미\n                   if(body.loadMore){\n                    setProducts([...Products, ...response.data.productInfo]) \n                   }else{\n                    setProducts(response.data.productInfo)\n                   }\n                    setPostSize(response.data.postSize)\n                }else{\n                    alert(\"상품들을 가져오는데 실패 했습니다.\")\n                }\n            })\n    }\n    //더보기 버튼 이벤트\n     const loadMoreHandler = () => {\n        //더보기 버튼 누르면 0 + 8\n        let skip = Skip + Limit\n        \n        //  loadMore:true  더보기 눌렀을때 정보 추가하여 보내기\n        let body = {\n            skip:skip,\n            limit:Limit,\n            loadMore:true\n        }\n        //\n        getProducts(body)\n        //증가되는 skip setState\n        setSkip(skip)\n    }\n\n    const renderCards = Products.map((product,index) => {\n        //console.log('product',product)\n           return  <Col lg={6} md={8} xs={24} key={index}>     \n                    <Card\n                        cover={<ImageSlider images={product.images} />}\n                        >\n                        <Meta\n                            title={product.title}\n                            description={`$${product.price}`}\n                        ></Meta>\n                    </Card>\n                </Col>\n    })  \n\n    const showFilteredResults = (filters)  => {\n        let body = {\n            //db 에서 처음으로 값 가져오기 skip:0, Limit은 초기화 값 8 그대로\n            skip:0,\n            limit:Limit,\n            filters:filters\n        }\n        //더보기 클릭시와 같이 관련값(upload된 것중) 가져오기 \n        getProducts(body)\n        setSkip(0)\n    }\n\n    const handlePrice = (value) =>{\n        const data = price;\n        let array = [];\n        //key  = 0,1,2,...\n        for(let key in data){\n               if(data[key]._id === parseInt(value,10)){\n              //dada.js의 array,[0,199]등     \n                array = data[key].array;   \n            }\n        }\n        return array;\n    }\n    // checked된 1,2, _id 가 filters에 담김\n    const handleFilters = (filters,category)  =>{\n        //모든 Filters를 newFilters로 복제\n        const newFilters ={...Filters}\n       \n        // continents 나 price 배열을 가리킴, filters = _id값 [1,2,..] \n        newFilters[category]  = filters\n        \n        console.log('filters',filters)\n        \n        if(category ===\"price\"){\n            let priceValues = handlePrice(filters)\n            newFilters[category] = priceValues  \n            // priceValues [0,199]등  category = \"price\"\n        }\n\n        showFilteredResults(newFilters)\n        setFilters(newFilters)      // continent, price 둘다표시되게\n    }\n    const updateSearchTerm = (newSearchTerm) =>{\n        setSearchTerm(newSearchTerm)\n    }\n   \n    return (\n\n        <div style={{width:'75%', margin:'3rem auto'}} > \n            <div style={{textAlign:'center'}}>\n                    <h2> REACT로 쇼핑몰만들기<Icon type=\"rocket\"></Icon> </h2>\n                \n            </div>\n\n                {/* Filter */}\n                <Row gutter = {[16,16]}>\n                    <Col lg={12} xs={24}>\n                        {/* 1) CheckBox  list이름으로 continents 데이터 checkbox component에 내려주기, list =props */}\n                        <CheckBox list ={continents} handleFilters={filters => handleFilters(filters,\"continents\")} />\n                    </Col>\n\n                    <Col lg={12} xs={24}>\n                        {/* RadioBox */}\n                        \n                        <RadioBox list ={price} handleFilters={filters => handleFilters(filters,\"price\")} />\n                    </Col>\n                </Row>\n\n\n                {/* Search */}\n                <div style={{display:'flex',justifyContent: 'flex-end',margin:'1rem auto'}}>\n                    <SearchFeature refreshFunction={updateSearchTerm}  />\n                </div>\n\n\n                {/* Cards 16 좌우간견 16 아래 간격 */}\n                <Row gutter={[16,16]}>\n                    {renderCards}\n                </Row>\n                <br/>\n\n                {PostSize >= Limit &&\n                    <div style={{display:'flex', justifyContent:'center'}}>\n                       <button onClick={loadMoreHandler}>더보기</button>\n                     </div>\n                }\n                \n                \n       \n        </div>\n\n    )\n}\n\nexport default LandingPage\n"]},"metadata":{},"sourceType":"module"}