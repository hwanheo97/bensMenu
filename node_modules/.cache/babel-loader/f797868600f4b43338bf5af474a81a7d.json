{"ast":null,"code":"import axios from'axios';import{LOGIN_USER,REGISTER_USER,AUTH_USER,LOGOUT_USER,ADD_TO_CART,GET_CART_ITEMS,REMOVE_CART_ITEM,ON_SUCCESS_BUY}from'./types';import{USER_SERVER}from'../components/Config.js';//import { response } from 'express';  \nexport function registerUser(dataToSubmit){var request=axios.post(\"\".concat(USER_SERVER,\"/register\"),dataToSubmit).then(function(response){return response.data;});return{type:REGISTER_USER,payload:request};}export function loginUser(dataToSubmit){var request=axios.post(\"\".concat(USER_SERVER,\"/login\"),dataToSubmit,{withCredentials:true}).then(function(response){return response.data;});return{type:LOGIN_USER,payload:request};}export function auth(){var request=axios.get(\"\".concat(USER_SERVER,\"/auth\"),{withCredentials:true}).then(function(response){return response.data;});return{type:AUTH_USER,payload:request};}export function logoutUser(){var request=axios.get(\"\".concat(USER_SERVER,\"/logout\"),{withCredentials:true}).then(function(response){return response.data;});return{type:LOGOUT_USER,payload:request};}export function addToCart(id){var body={productId:id};//body를넣고 addToCart end point를 backend로(routes/users.js) 보내기(21.9/8)\nvar request=axios.post(\"\".concat(USER_SERVER,\"/addToCart\"),body,{withCredentials:true}).then(function(response){return response.data;});//request를 받아 reducer.js로 가기\nreturn{type:ADD_TO_CART,payload:request};}export function getCartItems(cartItems,userCart){var request=axios.get(\"https://bensmenu.herokuapp.com/api/product/products_by_id?id=\".concat(cartItems,\"&type=array\")).then(function(response){//routes/product.js에서 request받아와서\n//CartIiem들에 해당하는 정보들을 Product Collection에서 가져온후 qiantity정보를 넣어준다\n//error 3)redux 간단하게 product.js수정경우 data. 의product 없애도 됨\nuserCart.forEach(function(cartItem){response.data.forEach(function(productDetail,index){if(cartItem.id===productDetail._id){response.data[index].quantity=cartItem.quantity;//3)redux 간단하게 product.js수정경우 product 없애도 됨\n}});});return response.data;//return 후 user_reducer.js 로 가기\n});//request를 받아 reducer.js로 가기\nreturn{type:GET_CART_ITEMS,payload:request};}export function removeCartItem(productId){var request=axios.get(\"https://bensmenu.herokuapp.com/api/users/removeFromCart?id=\".concat(productId),{withCredentials:true})//,{withCredentials:true}\n.then(function(response){//routes/user.js에서 request받아와서\n//productInfo,cart 정보를 조합해서 cartDetail을 만들기  => user_reducer로 \nresponse.data.cart.forEach(function(item){response.data.productInfo.forEach(function(product,index){if(item.id===product._id){response.data.productInfo[index].quantity=item.quantity;}});});return response.data;//return 후 user_reducer.js 로 가기\n});//3)request를 받아 reducer.js로 가기\nreturn{type:REMOVE_CART_ITEM,payload:request};}//CartPage 에서 dispatch한 두개 paymentData 와 cartDetail 을 data로받기,//end point와 data\n//3)request를 받아 reducer.js로 가기\nexport function onSuccessBuy(data){var request=axios.post(\"https://bensmenu.herokuapp.com/api/users/successBuy\",data,{withCredentials:true})//,{withCredentials:true}\n.then(function(response){return response.data;});return{type:ON_SUCCESS_BUY,payload:request};}","map":{"version":3,"sources":["C:/bensMenu/client/src/_actions/user_actions.js"],"names":["axios","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART","GET_CART_ITEMS","REMOVE_CART_ITEM","ON_SUCCESS_BUY","USER_SERVER","registerUser","dataToSubmit","request","post","then","response","data","type","payload","loginUser","withCredentials","auth","get","logoutUser","addToCart","id","body","productId","getCartItems","cartItems","userCart","forEach","cartItem","productDetail","index","_id","quantity","removeCartItem","cart","item","productInfo","product","onSuccessBuy"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACIC,UADJ,CAEIC,aAFJ,CAGIC,SAHJ,CAIIC,WAJJ,CAKIC,WALJ,CAMIC,cANJ,CAOIC,gBAPJ,CAQIC,cARJ,KASO,SATP,CAUA,OAASC,WAAT,KAA4B,yBAA5B,CACA;AAEA,MAAO,SAASC,CAAAA,YAAT,CAAsBC,YAAtB,CAAmC,CACtC,GAAMC,CAAAA,OAAO,CAAGZ,KAAK,CAACa,IAAN,WAAcJ,WAAd,cAAqCE,YAArC,EACXG,IADW,CACN,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADF,CAAhB,CAGA,MAAO,CACHC,IAAI,CAAEf,aADH,CAEHgB,OAAO,CAAEN,OAFN,CAAP,CAIH,CAED,MAAO,SAASO,CAAAA,SAAT,CAAmBR,YAAnB,CAAgC,CACnC,GAAMC,CAAAA,OAAO,CAAGZ,KAAK,CAACa,IAAN,WAAcJ,WAAd,WAAkCE,YAAlC,CAAgD,CAAES,eAAe,CAAE,IAAnB,CAAhD,EACHN,IADG,CACE,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADV,CAAhB,CAGA,MAAO,CACHC,IAAI,CAAEhB,UADH,CAEHiB,OAAO,CAAEN,OAFN,CAAP,CAIH,CAED,MAAO,SAASS,CAAAA,IAAT,EAAe,CAClB,GAAMT,CAAAA,OAAO,CAAGZ,KAAK,CAACsB,GAAN,WAAab,WAAb,UAAiC,CAAEW,eAAe,CAAE,IAAnB,CAAjC,EACfN,IADe,CACV,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADE,CAAhB,CAGA,MAAO,CACHC,IAAI,CAAEd,SADH,CAEHe,OAAO,CAAEN,OAFN,CAAP,CAIH,CAED,MAAO,SAASW,CAAAA,UAAT,EAAqB,CACxB,GAAMX,CAAAA,OAAO,CAAGZ,KAAK,CAACsB,GAAN,WAAab,WAAb,YAAmC,CAAEW,eAAe,CAAE,IAAnB,CAAnC,EACfN,IADe,CACV,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADE,CAAhB,CAGA,MAAO,CACHC,IAAI,CAAEb,WADH,CAEHc,OAAO,CAAEN,OAFN,CAAP,CAIH,CAED,MAAO,SAASY,CAAAA,SAAT,CAAmBC,EAAnB,CAAsB,CAEzB,GAAIC,CAAAA,IAAI,CAAG,CACPC,SAAS,CAAEF,EADJ,CAAX,CAGA;AACA,GAAMb,CAAAA,OAAO,CAAGZ,KAAK,CAACa,IAAN,WAAcJ,WAAd,eAAsCiB,IAAtC,CAA2C,CAACN,eAAe,CAAC,IAAjB,CAA3C,EACfN,IADe,CACV,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADE,CAAhB,CAGA;AACA,MAAO,CACHC,IAAI,CAAEZ,WADH,CAEHa,OAAO,CAAEN,OAFN,CAAP,CAKH,CAED,MAAO,SAASgB,CAAAA,YAAT,CAAsBC,SAAtB,CAAgCC,QAAhC,CAAyC,CAE5C,GAAMlB,CAAAA,OAAO,CAAGZ,KAAK,CAACsB,GAAN,wEAA0EO,SAA1E,iBACff,IADe,CACV,SAAAC,QAAQ,CAAI,CACd;AACA;AACC;AACDe,QAAQ,CAACC,OAAT,CAAiB,SAAAC,QAAQ,CAAI,CACzBjB,QAAQ,CAACC,IAAT,CAAce,OAAd,CAAsB,SAACE,aAAD,CAAgBC,KAAhB,CAA0B,CAC5C,GAAGF,QAAQ,CAACP,EAAT,GAAgBQ,aAAa,CAACE,GAAjC,CAAqC,CACjCpB,QAAQ,CAACC,IAAT,CAAckB,KAAd,EAAqBE,QAArB,CAA+BJ,QAAQ,CAACI,QAAxC,CAAkD;AACrD,CACJ,CAJD,EAKD,CANH,EAOE,MAAOrB,CAAAA,QAAQ,CAACC,IAAhB,CACF;AACH,CAde,CAAhB,CAgBA;AACA,MAAO,CACHC,IAAI,CAAEX,cADH,CAEHY,OAAO,CAAEN,OAFN,CAAP,CAKH,CACD,MAAO,SAASyB,CAAAA,cAAT,CAAwBV,SAAxB,CAAkC,CAErC,GAAMf,CAAAA,OAAO,CAAGZ,KAAK,CAACsB,GAAN,sEAAwEK,SAAxE,EAAqF,CAAEP,eAAe,CAAE,IAAnB,CAArF,CAAkH;AAAlH,CACfN,IADe,CACV,SAAAC,QAAQ,CAAI,CACd;AAEA;AACAA,QAAQ,CAACC,IAAT,CAAcsB,IAAd,CAAmBP,OAAnB,CAA2B,SAAAQ,IAAI,CAAI,CAC/BxB,QAAQ,CAACC,IAAT,CAAcwB,WAAd,CAA0BT,OAA1B,CAAkC,SAACU,OAAD,CAASP,KAAT,CAAkB,CAChD,GAAGK,IAAI,CAACd,EAAL,GAAYgB,OAAO,CAACN,GAAvB,CAA2B,CACvBpB,QAAQ,CAACC,IAAT,CAAcwB,WAAd,CAA0BN,KAA1B,EAAiCE,QAAjC,CAA4CG,IAAI,CAACH,QAAjD,CACH,CACJ,CAJD,EAKH,CAND,EAOE,MAAOrB,CAAAA,QAAQ,CAACC,IAAhB,CACF;AACH,CAde,CAAhB,CAeC;AACD,MAAO,CACHC,IAAI,CAAEV,gBADH,CAEHW,OAAO,CAAEN,OAFN,CAAP,CAIH,CACD;AACG;AACH,MAAO,SAAS8B,CAAAA,YAAT,CAAsB1B,IAAtB,CAA2B,CAC9B,GAAMJ,CAAAA,OAAO,CAAGZ,KAAK,CAACa,IAAN,uDAAiEG,IAAjE,CAAuE,CAAEI,eAAe,CAAE,IAAnB,CAAvE,CAAuG;AAAvG,CACfN,IADe,CACV,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADE,CAAhB,CAGA,MAAO,CACHC,IAAI,CAAET,cADH,CAEHU,OAAO,CAAEN,OAFN,CAAP,CAIH","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEM,\n    ON_SUCCESS_BUY\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n//import { response } from 'express';  \n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit, { withCredentials: true })   \n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`, { withCredentials: true }) \n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`, { withCredentials: true })  \n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\nexport function addToCart(id){\n\n    let body = {\n        productId :id   \n    }\n    //body를넣고 addToCart end point를 backend로(routes/users.js) 보내기(21.9/8)\n    const request = axios.post(`${USER_SERVER}/addToCart`,body,{withCredentials:true})\n    .then(response => response.data);\n    \n    //request를 받아 reducer.js로 가기\n    return {\n        type: ADD_TO_CART,\n        payload: request\n        \n    }\n}\n\nexport function getCartItems(cartItems,userCart){\n\n    const request = axios.get(`https://bensmenu.herokuapp.com/api/product/products_by_id?id=${cartItems}&type=array`)\n    .then(response => {\n        //routes/product.js에서 request받아와서\n        //CartIiem들에 해당하는 정보들을 Product Collection에서 가져온후 qiantity정보를 넣어준다\n         //error 3)redux 간단하게 product.js수정경우 data. 의product 없애도 됨\n        userCart.forEach(cartItem => {\n            response.data.forEach((productDetail, index) => {  \n                if(cartItem.id === productDetail._id){\n                    response.data[index].quantity= cartItem.quantity  //3)redux 간단하게 product.js수정경우 product 없애도 됨\n                }\n            })\n          })\n          return response.data;\n        //return 후 user_reducer.js 로 가기\n    });\n    \n    //request를 받아 reducer.js로 가기\n    return {\n        type: GET_CART_ITEMS,\n        payload: request\n        \n    }\n}\nexport function removeCartItem(productId){\n\n    const request = axios.get(`https://bensmenu.herokuapp.com/api/users/removeFromCart?id=${productId}`, { withCredentials: true })   //,{withCredentials:true}\n    .then(response => {\n        //routes/user.js에서 request받아와서\n        \n        //productInfo,cart 정보를 조합해서 cartDetail을 만들기  => user_reducer로 \n        response.data.cart.forEach(item => {\n            response.data.productInfo.forEach((product,index) =>{\n                if(item.id === product._id){\n                    response.data.productInfo[index].quantity = item.quantity\n                }\n            })\n        })\n          return response.data;\n        //return 후 user_reducer.js 로 가기\n    });\n     //3)request를 받아 reducer.js로 가기\n    return {\n        type: REMOVE_CART_ITEM,\n        payload: request\n     }\n}\n//CartPage 에서 dispatch한 두개 paymentData 와 cartDetail 을 data로받기,//end point와 data\n   //3)request를 받아 reducer.js로 가기\nexport function onSuccessBuy(data){    \n    const request = axios.post(`https://bensmenu.herokuapp.com/api/users/successBuy`,data, { withCredentials: true })      //,{withCredentials:true}\n    .then(response => response.data );\n     \n    return {\n        type: ON_SUCCESS_BUY,\n        payload: request\n     }\n}"]},"metadata":{},"sourceType":"module"}