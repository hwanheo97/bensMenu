{"ast":null,"code":"var _jsxFileName = \"C:\\\\boilerplate-mern-stack-master\\\\client\\\\src\\\\components\\\\utils\\\\FileUpload.js\";\nimport React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Icon } from 'antd';\nimport axios from 'axios'; //bakend 에 파일전달 라이브러리\n\nfunction FileUpload() {\n  //저장된 파일을 프런트엔드에 전달해주는 기능\n  const [Images, setImages] = useState([]);\n\n  const dropHandler = files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      } //backend 에 request시 형식 알리기\n\n    };\n    formData.append(\"file\", files[0]);\n    axios.post('/api/product/image', formData, config) //백엔드에 file 보낼때 error 방지 위해 formData,config 인자 사용\n    .then(response => {\n      if (response.data.success) {\n        window.alert('파일을 저장하는데 성공했습니다.');\n        console.log(response.data);\n        setImages([...Images, response.data.filePath]);\n      } else {\n        window.alert('파일을 저장하는데 실패했습니다.');\n      }\n    });\n  }; //end of dropHandler\n\n\n  return (\n    /*#__PURE__*/\n    //  {/* npm install react-dropzone --save */}\n    React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'spacebetween'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, {\n      onDrop: dropHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      style: {\n        width: 300,\n        height: 240,\n        border: '1px solid lightgray',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    }, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Icon, {\n      type: \"plus\",\n      style: {\n        fontSize: '3rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '350px',\n        height: '240px',\n        overflow: 'scroll',\n        border: '1px solid blue',\n        marginLeft: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, Images.map((image, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        minWidth: '300px',\n        width: '300px',\n        height: '240px'\n      },\n      src: 'http://locahost:5000/${image}',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    })))))\n  );\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/boilerplate-mern-stack-master/client/src/components/utils/FileUpload.js"],"names":["React","useState","Dropzone","Icon","axios","FileUpload","Images","setImages","dropHandler","files","formData","FormData","config","header","append","post","then","response","data","success","window","alert","console","log","filePath","display","justifyContent","getRootProps","getInputProps","width","height","border","alignItems","fontSize","overflow","marginLeft","map","image","index","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport {Icon} from 'antd';\r\nimport axios from 'axios';  //bakend 에 파일전달 라이브러리\r\n\r\n\r\n\r\nfunction FileUpload() {   //저장된 파일을 프런트엔드에 전달해주는 기능\r\n\r\n  const [Images,setImages] = useState([])\r\n\r\n  const dropHandler =(files) =>{\r\n   \r\n    let formData = new FormData();\r\n    const config ={\r\n      header:{'content-type': 'multipart/form-data'} //backend 에 request시 형식 알리기\r\n    }\r\n    formData.append(\"file\",files[0])\r\n\r\n\r\n    axios.post('/api/product/image',formData,config)  //백엔드에 file 보낼때 error 방지 위해 formData,config 인자 사용\r\n      .then(response => {\r\n          if(response.data.success){\r\n            window.alert('파일을 저장하는데 성공했습니다.')\r\n            console.log(response.data)\r\n\r\n            setImages([...Images,response.data.filePath])\r\n\r\n          }else{\r\n            window.alert('파일을 저장하는데 실패했습니다.')\r\n          }\r\n        })\r\n      }  //end of dropHandler\r\n\r\n  return (\r\n        //  {/* npm install react-dropzone --save */}\r\n    <div style={{display:'flex', justifyContent:'spacebetween'}}>\r\n        \r\n      <Dropzone onDrop={dropHandler}>\r\n        {({getRootProps, getInputProps}) => (\r\n          <section>\r\n            <div  style={{\r\n                  width:300, height:240, border:'1px solid lightgray',\r\n                  display:'flex', alignItems:'center', justifyContent:'center'\r\n            }}\r\n            \r\n              {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <Icon type=\"plus\" style={{fontSize:'3rem'}} ></Icon>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n            <div style={{display:'flex', width:'350px',height:'240px',overflow:'scroll', border:'1px solid blue', marginLeft:'1rem'}}>\r\n              {Images.map((image,index) => (\r\n                  <div key={index}> \r\n                    <img style={{minWidth:'300px',width:'300px',height:'240px'}}\r\n                        src={'http://locahost:5000/${image}'} />\r\n                  \r\n                  </div>\r\n              ) )}\r\n\r\n\r\n\r\n\r\n            </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileUpload\r\n"]},"metadata":{},"sourceType":"module"}