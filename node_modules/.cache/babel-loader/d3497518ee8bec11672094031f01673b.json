{"ast":null,"code":"import _objectSpread from\"C:\\\\bensMenu\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:\\\\bensMenu\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\bensMenu\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{FaCode}from\"react-icons/fa\";import axios from\"axios\";import{Icon,Col,Card,Row,Carousel}from'antd';import Meta from'antd/lib/card/Meta';import ImageSlider from'../../utils/ImageSlider';import CheckBox from'./Sections/CheckBox';import RadioBox from'./Sections/RadioBox';import SearchFeature from'./Sections/SearchFeature';import{countries,price}from'./Sections/Datas';function LandingPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),Products=_useState2[0],setProducts=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),Skip=_useState4[0],setSkip=_useState4[1];var _useState5=useState(4),_useState6=_slicedToArray(_useState5,2),Limit=_useState6[0],setLimit=_useState6[1];// 4만 가겨오기\nvar _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),PostSize=_useState8[0],setPostSize=_useState8[1];//Filters  두개의 배열로 초기 state\nvar _useState9=useState({countries:[],price:[]}),_useState10=_slicedToArray(_useState9,2),Filters=_useState10[0],setFilters=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),SearchTerm=_useState12[0],setSearchTerm=_useState12[1];useEffect(function(){//rendering 이후 처리할 작업을 사용 용도 => DB에서 data를 가져온후 state화 하고 렌더링\n//body에 넣어 request로 같이 보내기, 데이터베이스에서 정보를 갖고오기\nvar body={skip:Skip,limit:Limit};//함수화 하여 호출\ngetProducts(body);},[]);var getProducts=function getProducts(body){axios.post('/api/product/products',body)// routes/product.js 에서 처리후 받기,\n// 백엔드와 프런트엔드랑 통신을 쉽게 사용하기위해 사용하는 HTTP 비동기 통신 라이브러리\n.then(function(response){if(response.data.success){console.log('api/product/products',response.data);//원래있는 product를 모두 넣고 , 추가의미\nif(body.loadMore){setProducts([].concat(_toConsumableArray(Products),_toConsumableArray(response.data.productInfo)));}else{setProducts(response.data.productInfo);}setPostSize(response.data.postSize);}else{alert(\"상품들을 가져오는데 실패 했습니다.\");}});};//더보기 버튼 이벤트\nvar loadMoreHandler=function loadMoreHandler(){//더보기 버튼 누르면 0 + 8 그 다음 8 + 8\nvar skip=Skip+Limit;//  loadMore:true  더보기 눌렀을때 정보 추가하여 보내기\nvar body={skip:skip,limit:Limit,loadMore:true};//호출\ngetProducts(body);//증가되는 skip setState\nsetSkip(skip);};var renderCards=Products.map(function(product,index){console.log('rendercards-product',product);//, row 크기 24, column 큰화면 6 x4개사진, 중간화면 8 x3개, 작은 화면 24개\n//사진 여러장 돌리기 구현 위 해 InageSlider 자식 컴포넌트 만들기\nreturn/*#__PURE__*/React.createElement(Col,{lg:6,md:8,xs:24,key:index},/*#__PURE__*/React.createElement(Card,{cover:/*#__PURE__*/React.createElement(\"a\",{href:\"/product/\".concat(product._id)},/*#__PURE__*/React.createElement(ImageSlider,{images:product.images}))// a link 에 상품의 고유 id ${product._id} 로 href\n},/*#__PURE__*/React.createElement(Meta,{title:product.title,description:\"$\".concat(product.price)})));});var handlePrice=function handlePrice(value){var data=price;var array=[];//key  = 0,1,2,...\nfor(var key in data){if(data[key]._id===parseInt(value,10)){//dada.js의 array,[0,199]등  , 클릭한 값과 같다면   \narray=data[key].array;//같은 _id의 array  \n}}return array;};var showFilteredResults=function showFilteredResults(filters){var body={//첵크박스 클릭시 db 에서 처음으로 값 가져오기 skip:0(처음 부터 가져오기), Limit은 초기화 값 8 그대로\nskip:0,limit:Limit,filters:filters};//더보기 클릭시와 같이 관련값(upload된 것중) 가져오기 \ngetProducts(body);setSkip(0);};// checked된 1,2, _id 가 filters에 담김\nvar _handleFilters=function handleFilters(filters,category){//모든 Filters를 newFilters로 복제, category 는 continents 와 Price\nvar newFilters=_objectSpread({},Filters);// State에 있는 초기 Filters값 모두\n// continents 나 price 배열을 가리킴, filters = _id값 [1,2,..] \nnewFilters[category]=filters;//예  [1,2,3]\nconsole.log('filters',filters);if(category===\"price\"){var priceValues=handlePrice(filters);newFilters[category]=priceValues;// priceValues [0,199]등  category = \"price\"\n}showFilteredResults(newFilters);setFilters(newFilters);// continent, price 둘다표시되게\n};// newSearchTerm = event.currentTarget.value\nvar updateSearchTerm=function updateSearchTerm(newSearchTerm){var body={skip:0,limit:Limit,filters:Filters,//state 의 Filters\nsearchTerm:newSearchTerm};setSkip(0);setSearchTerm(newSearchTerm);getProducts(body);};return/*#__PURE__*/React.createElement(\"div\",{style:{width:'75%',margin:'3rem auto'}},/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:'center'}},/*#__PURE__*/React.createElement(\"h2\",null,\" Ben's Menu \")),/*#__PURE__*/React.createElement(Row,{gutter:[16,16]},/*#__PURE__*/React.createElement(Col,{lg:12,xs:24},/*#__PURE__*/React.createElement(CheckBox,{list:countries,handleFilters:function handleFilters(filters){return _handleFilters(filters,\"countries\");}})),/*#__PURE__*/React.createElement(Col,{lg:12,xs:24},/*#__PURE__*/React.createElement(RadioBox,{list:price,handleFilters:function handleFilters(filters){return _handleFilters(filters,\"price\");}}))),/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',justifyContent:'flex-end',margin:'1rem auto'}},/*#__PURE__*/React.createElement(SearchFeature,{refreshFunction:updateSearchTerm})),/*#__PURE__*/React.createElement(Row,{gutter:[16,16]},renderCards),/*#__PURE__*/React.createElement(\"br\",null),PostSize>=Limit&&/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',justifyContent:'center'}},/*#__PURE__*/React.createElement(\"button\",{onClick:loadMoreHandler},\"\\uB354\\uBCF4\\uAE30\")));}export default LandingPage;","map":{"version":3,"sources":["C:/bensMenu/client/src/components/views/LandingPage/LandingPage.js"],"names":["React","useEffect","useState","FaCode","axios","Icon","Col","Card","Row","Carousel","Meta","ImageSlider","CheckBox","RadioBox","SearchFeature","countries","price","LandingPage","Products","setProducts","Skip","setSkip","Limit","setLimit","PostSize","setPostSize","Filters","setFilters","SearchTerm","setSearchTerm","body","skip","limit","getProducts","post","then","response","data","success","console","log","loadMore","productInfo","postSize","alert","loadMoreHandler","renderCards","map","product","index","_id","images","title","handlePrice","value","array","key","parseInt","showFilteredResults","filters","handleFilters","category","newFilters","priceValues","updateSearchTerm","newSearchTerm","searchTerm","width","margin","textAlign","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { FaCode } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport {Icon,Col,Card,Row,Carousel} from 'antd'\nimport Meta from 'antd/lib/card/Meta';\nimport ImageSlider from '../../utils/ImageSlider';\nimport CheckBox from './Sections/CheckBox';\nimport RadioBox from './Sections/RadioBox';\nimport SearchFeature from './Sections/SearchFeature';\nimport { countries,price } from './Sections/Datas';\n\nfunction LandingPage() {\n\n    const [Products, setProducts]  =  useState([])\n    const [Skip,setSkip] = useState(0)\n    const [Limit,setLimit] = useState(4)     // 4만 가겨오기\n    const [PostSize,setPostSize] = useState(0)\n    //Filters  두개의 배열로 초기 state\n    const [Filters,setFilters] = useState({\n        countries:[],\n        price: []\n    })\n    const [SearchTerm,setSearchTerm]  = useState(\"\")\n\n    useEffect(() => {\n       //rendering 이후 처리할 작업을 사용 용도 => DB에서 data를 가져온후 state화 하고 렌더링\n       //body에 넣어 request로 같이 보내기, 데이터베이스에서 정보를 갖고오기\n        let body = {\n            skip:Skip,\n            limit:Limit\n        }\n        //함수화 하여 호출\n        getProducts(body)   \n    },[])\n\n    const getProducts = (body) =>{\n        axios.post('/api/product/products',body)  // routes/product.js 에서 처리후 받기,\n        // 백엔드와 프런트엔드랑 통신을 쉽게 사용하기위해 사용하는 HTTP 비동기 통신 라이브러리\n            .then(response =>{\n                if(response.data.success){\n                    console.log('api/product/products',response.data)\n                      //원래있는 product를 모두 넣고 , 추가의미\n                   if(body.loadMore){\n                    setProducts([...Products, ...response.data.productInfo]) \n                   }else{\n                    setProducts(response.data.productInfo)\n                   }\n                    setPostSize(response.data.postSize)\n                }else{\n                    alert(\"상품들을 가져오는데 실패 했습니다.\")\n                }\n            })\n    }\n\n    //더보기 버튼 이벤트\n     const loadMoreHandler = () => {\n        //더보기 버튼 누르면 0 + 8 그 다음 8 + 8\n        let skip = Skip + Limit\n            //  loadMore:true  더보기 눌렀을때 정보 추가하여 보내기\n        let body = {\n            skip:skip,\n            limit:Limit,\n            loadMore:true\n        }\n        //호출\n        getProducts(body)\n        //증가되는 skip setState\n        setSkip(skip)\n    }\n\n    const renderCards = Products.map((product,index) => {\n        console.log('rendercards-product',product)  //, row 크기 24, column 큰화면 6 x4개사진, 중간화면 8 x3개, 작은 화면 24개\n        //사진 여러장 돌리기 구현 위 해 InageSlider 자식 컴포넌트 만들기\n           return  <Col lg={6} md={8} xs={24} key={index}>     \n                        <Card\n                            cover={<a href={`/product/${product._id}`}><ImageSlider images={product.images} /></a>}\n                            // a link 에 상품의 고유 id ${product._id} 로 href\n                            >\n                            <Meta\n                                title={product.title}\n                                description={`$${product.price}`}\n                            ></Meta>\n                        </Card>\n                    </Col>\n    })  \n\n    const handlePrice = (value) =>{\n        const data = price;\n        let array = [];\n        //key  = 0,1,2,...\n        for(let key in data){\n               if(data[key]._id === parseInt(value,10)){\n              //dada.js의 array,[0,199]등  , 클릭한 값과 같다면   \n                array = data[key].array;      //같은 _id의 array  \n            }\n        }\n        return array;\n    }\n\n    const showFilteredResults = (filters)  => {\n        let body = {\n            //첵크박스 클릭시 db 에서 처음으로 값 가져오기 skip:0(처음 부터 가져오기), Limit은 초기화 값 8 그대로\n            skip:0,\n            limit:Limit,\n            filters:filters\n        }\n        //더보기 클릭시와 같이 관련값(upload된 것중) 가져오기 \n        getProducts(body)\n        setSkip(0)\n    }\n\n    // checked된 1,2, _id 가 filters에 담김\n    const handleFilters = (filters,category)  =>{\n        //모든 Filters를 newFilters로 복제, category 는 continents 와 Price\n        const newFilters ={...Filters}   // State에 있는 초기 Filters값 모두\n               // continents 나 price 배열을 가리킴, filters = _id값 [1,2,..] \n        newFilters[category]  = filters   //예  [1,2,3]\n         console.log('filters',filters)\n         \n           if(category ===\"price\"){\n            let priceValues = handlePrice(filters)\n            newFilters[category] = priceValues  \n            // priceValues [0,199]등  category = \"price\"\n        }\n        showFilteredResults(newFilters)\n        setFilters(newFilters)      // continent, price 둘다표시되게\n    }\n    // newSearchTerm = event.currentTarget.value\n    const updateSearchTerm = (newSearchTerm) =>{\n          let body = {\n            skip:0,\n            limit:Limit,\n            filters:Filters,  //state 의 Filters\n            searchTerm:newSearchTerm\n        }\n        setSkip(0)\n        setSearchTerm(newSearchTerm)\n        getProducts(body)\n    }\n   \n    return (\n        <div style={{width:'75%', margin:'3rem auto'}} > \n            <div style={{textAlign:'center'}}>\n                     <h2> Ben's Menu {/*<Icon type=\"rocket\"></Icon> */}</h2> \n             </div>\n                {/* Filter */}\n                <Row gutter = {[16,16]}>\n                    <Col lg={12} xs={24}>\n                        {/* 열나누기 전체 24, 큰화면 12 x 2개 반응형으로 작은화면 24x 1만 나오게 */}\n                      {/* 1) CheckBox  list이름으로 continents 데이터 checkbox component에 내려주기, list =props */}\n                        <CheckBox list ={countries} handleFilters={filters => handleFilters(filters,\"countries\")} />\n                        {/* Datas.js 컾포넌트의 배열 continents 를 checkBox에 넣기 */}\n                    </Col>\n\n                    <Col lg={12} xs={24}>\n                        {/* RadioBox */}\n                        <RadioBox list ={price} handleFilters={filters => handleFilters(filters,\"price\")} />\n                    </Col>\n                </Row>\n\n\n                {/* Search */}\n                <div style={{display:'flex',justifyContent: 'flex-end',margin:'1rem auto'}}>\n                    <SearchFeature refreshFunction={updateSearchTerm}  />\n                    {/* props name정의 */}\n                </div>\n\n\n                {/* Cards ,gutter=margin 좌우간격 16 아래 간격 */}\n                <Row gutter={[16,16]}>\n                    {renderCards}\n                </Row>\n                <br/>\n                {/* productInfo.length = PostSize 가 8보다 크거나 같으면 더보기 버튼 보여주기  */}\n                {PostSize >= Limit &&\n                    <div style={{display:'flex', justifyContent:'center'}}>\n                       <button onClick={loadMoreHandler}>더보기</button>\n                     </div>\n                }\n        </div>\n    )\n}\nexport default LandingPage\n"]},"metadata":{},"sourceType":"module"}