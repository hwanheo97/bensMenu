{"ast":null,"code":"var _jsxFileName = \"C:\\\\bensMenu\\\\client\\\\src\\\\components\\\\views\\\\UploadProductPage\\\\UploadProductPage.js\";\nimport React, { useState } from 'react';\nimport { Typography, Button, Form, Input } from 'antd';\nimport FileUpload from '../../utils/FileUpload';\nimport Axios from 'axios';\nconst {\n  TextArea\n} = Input; // step 1 UploadPage  만들기 \n// const Continents = [\n//     { key: 1, value: \"Africa\" },\n//     { key: 2, value: \"Europe\" },\n//     { key: 3, value: \"Asia\" },\n//     { key: 4, value: \"North America\" },\n//     { key: 5, value: \"South America\" },\n//     { key: 6, value: \"Australia\" },\n//     { key: 7, value: \"Antarctica\" }\n// ]\n\nconst Continents = [{\n  key: 1,\n  value: \"Africa\"\n}, {\n  key: 2,\n  value: \"Europe\"\n}, {\n  key: 3,\n  value: \"Asia\"\n}, {\n  key: 4,\n  value: \"North America\"\n}, {\n  key: 5,\n  value: \"South America\"\n}, {\n  key: 6,\n  value: \"Australia\"\n}, {\n  key: 7,\n  value: \"Antarctica\"\n}];\n\nfunction UploadProductPage(props) {\n  const [Title, setTitle] = useState(\"\"); // event 발생시 setTitle 함수로 State값을 변경해 Title에 넣어 준다 => server쪽에 보낼 모든 정보들\n\n  const [Description, setDescription] = useState(\"\");\n  const [Price, setPrice] = useState(0);\n  const [Continent, setContinent] = useState(1);\n  const [Images, setImages] = useState([]); //event를 이용 setTitle로 Title값을 바꿔줌\n\n  const titleChangeHandler = event => {\n    setTitle(event.currentTarget.value); // event 발생시 setTitle 함수로 State값을 변경해 Title에 넣어 준다\n  };\n\n  const descriptionChangeHandler = event => {\n    setDescription(event.currentTarget.value);\n  };\n\n  const priceChangeHandler = event => {\n    setPrice(event.currentTarget.value);\n  };\n\n  const continentChangeHandler = event => {\n    setContinent(event.currentTarget.value);\n  };\n\n  const updateImages = newImages => {\n    //Fileupload에서 올린 newImages를 받아와 UploadProductPage의 setImages로 state값 넣기\n    setImages(newImages);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault(); //모든 state값 채워야 넘어가게 설정\n\n    if (!Title || !Description || !Price || !Continent || Images.length === 0) {\n      return alert(\" 모든 값을 넣어주셔야 합니다.\");\n    } //서버에 채운 값들을 request로 보낸다.\n\n\n    const body = {\n      //로그인 된 사람의 ID , hoc/auth.js의 자식 컴포넌트로 props가져오기\n      writer: props.user.userData._id,\n      title: Title,\n      description: Description,\n      price: Price,\n      images: Images,\n      continents: Continent\n    };\n    Axios.post('/api/product', body) //backend로 body의 모든 정보 보내기 =>server 쪽 index.js=> routes/product.js\n    .then(response => {\n      if (response.data.success) {\n        alert('상품 업로드에 성공 했습니다.');\n        props.history.push('/'); //성공을하면 '/' landing page경로로 보내기\n      } else {\n        alert('상품 업로드에 실패 했습니다.');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: '700px',\n      margin: '2rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \" \\uC0C1\\uD488 \\uC5C5\\uB85C\\uB4DC\")), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FileUpload, {\n    refreshFunction: updateImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uB984\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: titleChangeHandler,\n    value: Title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"\\uC124\\uBA85\"), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: descriptionChangeHandler,\n    value: Description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"\\uAC00\\uACA9($)\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    onChange: priceChangeHandler,\n    value: Price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: continentChangeHandler,\n    value: Continent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 18\n    }\n  }, \"  \", Continents.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.key,\n    value: Continent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"  \", item.value, \"  \"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"\\uD655\\uC778\")));\n}\n\nexport default UploadProductPage;","map":{"version":3,"sources":["C:/bensMenu/client/src/components/views/UploadProductPage/UploadProductPage.js"],"names":["React","useState","Typography","Button","Form","Input","FileUpload","Axios","TextArea","Continents","key","value","UploadProductPage","props","Title","setTitle","Description","setDescription","Price","setPrice","Continent","setContinent","Images","setImages","titleChangeHandler","event","currentTarget","descriptionChangeHandler","priceChangeHandler","continentChangeHandler","updateImages","newImages","submitHandler","preventDefault","length","alert","body","writer","user","userData","_id","title","description","price","images","continents","post","then","response","data","success","history","push","maxWidth","margin","textAlign","marginBottom","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd';\r\nimport FileUpload from '../../utils/FileUpload';\r\nimport Axios from 'axios';\r\n\r\nconst { TextArea } = Input;\r\n\r\n// step 1 UploadPage  만들기 \r\n// const Continents = [\r\n//     { key: 1, value: \"Africa\" },\r\n//     { key: 2, value: \"Europe\" },\r\n//     { key: 3, value: \"Asia\" },\r\n//     { key: 4, value: \"North America\" },\r\n//     { key: 5, value: \"South America\" },\r\n//     { key: 6, value: \"Australia\" },\r\n//     { key: 7, value: \"Antarctica\" }\r\n// ]\r\nconst Continents = [\r\n    { key: 1, value: \"Africa\" },\r\n    { key: 2, value: \"Europe\" },\r\n    { key: 3, value: \"Asia\" },\r\n    { key: 4, value: \"North America\" },\r\n    { key: 5, value: \"South America\" },\r\n    { key: 6, value: \"Australia\" },\r\n    { key: 7, value: \"Antarctica\" }\r\n]\r\nfunction UploadProductPage(props) {\r\n\r\n    const [Title, setTitle] = useState(\"\")    // event 발생시 setTitle 함수로 State값을 변경해 Title에 넣어 준다 => server쪽에 보낼 모든 정보들\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Price, setPrice] = useState(0)\r\n    const [Continent, setContinent] = useState(1)\r\n    const [Images, setImages] = useState([])\r\n\r\n    //event를 이용 setTitle로 Title값을 바꿔줌\r\n    const titleChangeHandler = (event) => {\r\n        setTitle(event.currentTarget.value)   // event 발생시 setTitle 함수로 State값을 변경해 Title에 넣어 준다\r\n    }\r\n    const descriptionChangeHandler = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n    const priceChangeHandler = (event) => {\r\n        setPrice(event.currentTarget.value)\r\n    }\r\n    const continentChangeHandler = (event) => {\r\n        setContinent(event.currentTarget.value)\r\n    }\r\n    const updateImages = (newImages) => {  //Fileupload에서 올린 newImages를 받아와 UploadProductPage의 setImages로 state값 넣기\r\n        setImages(newImages)\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        //모든 state값 채워야 넘어가게 설정\r\n        if (!Title || !Description || !Price || !Continent || Images.length === 0) {\r\n            return alert(\" 모든 값을 넣어주셔야 합니다.\")\r\n        }\r\n        //서버에 채운 값들을 request로 보낸다.\r\n        const body = {\r\n            //로그인 된 사람의 ID , hoc/auth.js의 자식 컴포넌트로 props가져오기\r\n            writer: props.user.userData._id,\r\n            title: Title,\r\n            description: Description,\r\n            price: Price,\r\n            images: Images,\r\n            continents: Continent\r\n        }\r\n        Axios.post('/api/product', body)  //backend로 body의 모든 정보 보내기 =>server 쪽 index.js=> routes/product.js\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('상품 업로드에 성공 했습니다.')\r\n                    props.history.push('/')   //성공을하면 '/' landing page경로로 보내기\r\n                } else {\r\n                    alert('상품 업로드에 실패 했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <h2> 상품 업로드</h2>\r\n            </div>\r\n            <Form onSubmit={submitHandler}>\r\n                {/* DropZone */}\r\n                <FileUpload refreshFunction={updateImages} />\r\n                <br />\r\n                <br />\r\n                <label>이름</label>\r\n                <Input onChange={titleChangeHandler} value={Title} />\r\n                <br />\r\n                <br />\r\n                <label>설명</label>\r\n                <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n                <br />\r\n                <br />\r\n                <label>가격($)</label>\r\n                <Input type=\"number\" onChange={priceChangeHandler} value={Price} />\r\n                <br />\r\n                <br />\r\n                 <select onChange={continentChangeHandler} value={Continent}>  {/*event가 일어나면 setContinent메소드로 state값 continent값이 바뀜 */}\r\n                    {Continents.map(item => (\r\n                        <option key={item.key} value={Continent}>  {item.value}  </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <button type=\"submit\">\r\n                    확인\r\n                </button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default UploadProductPage\r\n"]},"metadata":{},"sourceType":"module"}