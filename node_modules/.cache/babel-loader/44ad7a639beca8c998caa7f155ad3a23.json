{"ast":null,"code":"var _jsxFileName = \"C:\\\\bensMenu\\\\client\\\\src\\\\components\\\\views\\\\LandingPage\\\\Sections\\\\CheckBox.js\";\nimport React, { useState } from 'react';\nimport { Collapse, Checkbox } from 'antd';\nconst {\n  Panel\n} = Collapse;\n\nfunction CheckBox(props) {\n  //  _id 를 check하면 state화  [1,2,..]\n  const [Checked, setChecked] = useState([]);\n\n  const handleToggle = value => {\n    //누른 것의 index를 구하고\n    const currentIndex = Checked.indexOf(value); //전체 Checked 된 State에서 현재누른 Checkbox 가 이미 있다면, spread operator syntax [...Checked]\n\n    const newChecked = [...Checked]; //-1 = 없으면 State 넣어준다,=> 클릭시 V 표시됨\n\n    if (currentIndex === -1) {\n      newChecked.push(value); //넣어주고 => 클릭시 V 표시됨\n    } else {\n      //이미 있으면 지워주기\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked); //newChecked 셋후 부모 component LandingPage에 연결\n\n    props.handleFilters(newChecked);\n  };\n\n  const renderCheckboxLists = () => props.list && props.list.map((value, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: () => handleToggle(value._id),\n    checked: Checked.indexOf(value._id) === -1 ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, value.name))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: ['0'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"Item\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }\n  }, renderCheckboxLists())));\n}\n\nexport default CheckBox;","map":{"version":3,"sources":["C:/bensMenu/client/src/components/views/LandingPage/Sections/CheckBox.js"],"names":["React","useState","Collapse","Checkbox","Panel","CheckBox","props","Checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","handleFilters","renderCheckboxLists","list","map","index","_id","marginRight","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAkBC,QAAlB,QAAkC,MAAlC;AAGA,MAAM;AAACC,EAAAA;AAAD,IAAWF,QAAjB;;AAEA,SAASG,QAAT,CAAkBC,KAAlB,EAAyB;AACrB;AACA,QAAM,CAACC,OAAD,EAASC,UAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC5B;AACA,UAAMC,YAAY,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB,CAF4B,CAI5B;;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGN,OAAJ,CAAnB,CAL4B,CAO5B;;AACA,QAAGI,YAAY,KAAK,CAAC,CAArB,EAAuB;AACnBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB,EADmB,CAEnB;AACH,KAHD,MAGK;AACD;AACAG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAA+B,CAA/B;AACH;;AACDH,IAAAA,UAAU,CAACK,UAAD,CAAV,CAf4B,CAgB5B;;AACAP,IAAAA,KAAK,CAACU,aAAN,CAAoBH,UAApB;AACH,GAlBD;;AAoBA,QAAMI,mBAAmB,GAAG,MAAMX,KAAK,CAACY,IAAN,IAAcZ,KAAK,CAACY,IAAN,CAAWC,GAAX,CAAe,CAACT,KAAD,EAAOU,KAAP,kBAC3D,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,MAAIX,YAAY,CAACC,KAAK,CAACW,GAAP,CAApC;AACI,IAAA,OAAO,EAAEd,OAAO,CAACK,OAAR,CAAgBF,KAAK,CAACW,GAAtB,MAA8B,CAAC,CAA/B,GAAmC,KAAnC,GAA2C,IADxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,WAAW,EAAC;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCZ,KAAK,CAACa,IAA1C,CAFJ,CADJ,CAD4C,CAAhD;;AAQF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,gBAAgB,EAAE,CAAC,GAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAC,MAAd;AAAqB,IAAA,GAAG,EAAC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,mBAAmB,EADtB,CADL,CADJ,CADF;AASD;;AAED,eAAeZ,QAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Collapse,Checkbox } from 'antd'\r\n\r\n\r\nconst {Panel}  = Collapse\r\n\r\nfunction CheckBox(props) {\r\n    //  _id 를 check하면 state화  [1,2,..]\r\n    const [Checked,setChecked] =useState([])\r\n\r\n    const handleToggle = (value) => {\r\n        //누른 것의 index를 구하고\r\n        const currentIndex = Checked.indexOf(value)\r\n\r\n        //전체 Checked 된 State에서 현재누른 Checkbox 가 이미 있다면, spread operator syntax [...Checked]\r\n        const newChecked = [...Checked]\r\n       \r\n        //-1 = 없으면 State 넣어준다,=> 클릭시 V 표시됨\r\n        if(currentIndex === -1){\r\n            newChecked.push(value)\r\n            //넣어주고 => 클릭시 V 표시됨\r\n        }else{\r\n            //이미 있으면 지워주기\r\n            newChecked.splice(currentIndex,1)\r\n        }\r\n        setChecked(newChecked)\r\n        //newChecked 셋후 부모 component LandingPage에 연결\r\n        props.handleFilters(newChecked)\r\n    }\r\n\r\n    const renderCheckboxLists = () => props.list && props.list.map((value,index) =>(\r\n        <React.Fragment key={index}>\r\n            <Checkbox onChange={()=>handleToggle(value._id)} \r\n                checked={Checked.indexOf(value._id)=== -1 ? false : true}  > \r\n                <span style={{marginRight:'1rem'}}>{value.name}</span>\r\n            </Checkbox>\r\n        </React.Fragment>\r\n    ))\r\n  return (\r\n    <div>\r\n        <Collapse defaultActiveKey={['0']} >\r\n             <Panel header=\"Item\" key=\"1\">  \r\n               {renderCheckboxLists()}\r\n            </Panel>\r\n        </Collapse>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckBox\r\n"]},"metadata":{},"sourceType":"module"}