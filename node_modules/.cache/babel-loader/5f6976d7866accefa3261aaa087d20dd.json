{"ast":null,"code":"import _toConsumableArray from\"C:\\\\bensMenu\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\bensMenu\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Dropzone from'react-dropzone';import{Icon}from'antd';import axios from'axios';//bakend 에 파일전달 라이브러리\nfunction FileUpload(props){//저장된 파일을 프런트엔드에 전달해주는 기능, 아래 ,27, 44line props 사용위해 인자 넣기\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),Images=_useState2[0],setImages=_useState2[1];//이미지를 여러개 배열로 []\nvar dropHandler=function dropHandler(files){var formData=new FormData();var config={header:{'content-type':'multipart/form-data'}//backend 에 request시 형식 알리기\n};formData.append(\"file\",files[0]);//formData안에 file을 올리면 file정보 들어감 \naxios.post('https://bensmenu.herokuapp.com/api/product/image',formData,config)//request:백엔드에 file request 보낼때 error 방지 위해 formData,config 인자 사용\n.then(function(response){if(response.data.success){//alert('파일을 저장하는데 성공했습니다.')\nconsole.log('file upload response.data',response.data);// //backend에서 frontend로 정보 전달 : 파일 경로, 파일명이 오게됨\nsetImages([].concat(_toConsumableArray(Images),[response.data.filePath]));// ...Images  spread operator를 이용 모든 image 저장 ,새로운 response.data.filePath를 Images에 setImages하면 새로운 이미지가 생기게 됨\nprops.refreshFunction([].concat(_toConsumableArray(Images),[response.data.filePath]));//image file을 올릴때 부모 UploadProductPage의 props 호출하여 변경시키기\n}else{alert('파일을 저장하는데 실패했습니다.');}});};//end of dropHandler\nvar deleteHandler=function deleteHandler(image){var currentIndex=Images.indexOf(image);//image의 indexOF() 메소드 이용 index 찾기\n//console.log('currentIndex',currentIndex);\nvar newImages=_toConsumableArray(Images);//Images 배열에 있는 모든 images를 newImages에 복사\nnewImages.splice(currentIndex,1);//currendex 1개를 지우는 메소드 splice\nsetImages(newImages);//newImages를 셋팅하고 부모  UploadProductPage에 넘겨주어야함\nprops.refreshFunction(newImages);//image file을 올릴때 부모 UploadProductPage의 props 호출하여 삭제변경시키기\n};return/*#__PURE__*/ (//  {/* npm install react-dropzone --save */}\nReact.createElement(\"div\",{style:{display:'flex',justifyContent:'spacebetween'}},/*#__PURE__*/React.createElement(Dropzone,{onDrop:dropHandler},function(_ref){var getRootProps=_ref.getRootProps,getInputProps=_ref.getInputProps;return/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"div\",Object.assign({style:{width:300,height:240,border:'1px solid lightgray',display:'flex',alignItems:'center',justifyContent:'center'}},getRootProps()),/*#__PURE__*/React.createElement(\"input\",getInputProps()),/*#__PURE__*/React.createElement(Icon,{type:\"plus\",style:{fontSize:'3rem'}})));}),/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',width:'350px',height:'240px',overflow:'scroll',border:'1px solid blue',marginLeft:'1rem'}},Images.map(function(image,index){return/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return deleteHandler(image);},key:index},\"       \",/*#__PURE__*/React.createElement(\"img\",{style:{minWidth:'300px',width:'300px',height:'240px',marginLeft:'.5rem'},src:\"https://bensmenu.herokuapp.com/\".concat(image)}));}))));}export default FileUpload;","map":{"version":3,"sources":["C:/bensMenu/client/src/components/utils/FileUpload.js"],"names":["React","useState","Dropzone","Icon","axios","FileUpload","props","Images","setImages","dropHandler","files","formData","FormData","config","header","append","post","then","response","data","success","console","log","filePath","refreshFunction","alert","deleteHandler","image","currentIndex","indexOf","newImages","splice","display","justifyContent","getRootProps","getInputProps","width","height","border","alignItems","fontSize","overflow","marginLeft","map","index","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport {Icon} from 'antd';\r\nimport axios from 'axios';  \r\n//bakend 에 파일전달 라이브러리\r\n\r\nfunction FileUpload(props) {   \r\n  //저장된 파일을 프런트엔드에 전달해주는 기능, 아래 ,27, 44line props 사용위해 인자 넣기\r\n \r\n  const [Images,setImages] = useState([])   //이미지를 여러개 배열로 []\r\n \r\n  const dropHandler =(files) => {\r\n   \r\n    let formData = new FormData();\r\n    const config ={\r\n      header:{'content-type' : 'multipart/form-data'} //backend 에 request시 형식 알리기\r\n    }\r\n    formData.append(\"file\",files[0])\r\n    //formData안에 file을 올리면 file정보 들어감 \r\n    axios.post('https://bensmenu.herokuapp.com/api/product/image',formData,config)  //request:백엔드에 file request 보낼때 error 방지 위해 formData,config 인자 사용\r\n      .then(response => {\r\n          if(response.data.success){\r\n            //alert('파일을 저장하는데 성공했습니다.')\r\n            console.log('file upload response.data',response.data)  // //backend에서 frontend로 정보 전달 : 파일 경로, 파일명이 오게됨\r\n             setImages([...Images,response.data.filePath])  \r\n            // ...Images  spread operator를 이용 모든 image 저장 ,새로운 response.data.filePath를 Images에 setImages하면 새로운 이미지가 생기게 됨\r\n            props.refreshFunction([...Images,response.data.filePath])   //image file을 올릴때 부모 UploadProductPage의 props 호출하여 변경시키기\r\n          }else{\r\n            alert('파일을 저장하는데 실패했습니다.')\r\n          }\r\n        })\r\n      }  //end of dropHandler\r\n  \r\n  const deleteHandler =(image) => {\r\n    const currentIndex = Images.indexOf(image)    //image의 indexOF() 메소드 이용 index 찾기\r\n    //console.log('currentIndex',currentIndex);\r\n    let newImages = [...Images]   //Images 배열에 있는 모든 images를 newImages에 복사\r\n    newImages.splice(currentIndex,1)    //currendex 1개를 지우는 메소드 splice\r\n    setImages(newImages)               //newImages를 셋팅하고 부모  UploadProductPage에 넘겨주어야함\r\n    props.refreshFunction(newImages)   //image file을 올릴때 부모 UploadProductPage의 props 호출하여 삭제변경시키기\r\n  }\r\n  \r\n  return (\r\n        //  {/* npm install react-dropzone --save */}\r\n    <div style={{display:'flex', justifyContent:'spacebetween'}}>\r\n\r\n       {/* //react-dropzone-npm 공인 사이트에서 가겨오기  */}\r\n      <Dropzone onDrop={dropHandler}>\r\n        {({getRootProps, getInputProps}) => (\r\n          <section>\r\n            <div  style={{\r\n                  width:300, height:240, border:'1px solid lightgray',\r\n                  display:'flex', alignItems:'center', justifyContent:'center'\r\n            }}\r\n            \r\n              {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <Icon type=\"plus\" style={{fontSize:'3rem'}} ></Icon>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n\r\n            {/* //파일올리면 파일 렌더링 , 파일이 아오게 */}\r\n\r\n            <div style={{display:'flex', width:'350px',height:'240px',overflow:'scroll', border:'1px solid blue', marginLeft:'1rem'}}>\r\n              \r\n              {Images.map((image,index) => (   \r\n                  <div onClick={()=>deleteHandler(image)} key={index}>       {/* image index받기위해 image넣기 */}\r\n                    <img style={{minWidth:'300px',width:'300px',height:'240px', marginLeft:'.5rem'}}\r\n                        src={`https://bensmenu.herokuapp.com/${image}`} />\r\n                  </div>\r\n              ) )}\r\n\r\n            </div>\r\n    </div>\r\n  )\r\n}\r\nexport default FileUpload\r\n"]},"metadata":{},"sourceType":"module"}