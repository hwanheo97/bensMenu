{"ast":null,"code":"import _objectSpread from\"C:\\\\bensMenu\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{LOGIN_USER,REGISTER_USER,AUTH_USER,LOGOUT_USER,ADD_TO_CART,GET_CART_ITEMS,REMOVE_CART_ITEM,ON_SUCCESS_BUY}from'../_actions/types';//import { onSuccessBuy } from '../_actions/user_actions';\nexport default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case REGISTER_USER:return _objectSpread({},state,{register:action.payload});case LOGIN_USER:return _objectSpread({},state,{loginSucces:action.payload});case AUTH_USER:return _objectSpread({},state,{userData:action.payload});case LOGOUT_USER:return _objectSpread({},state);case ADD_TO_CART:return _objectSpread({},state,{userData:_objectSpread({},state.userData,{//원래있던 useData넣기\ncart:action.payload//cart에 넣기,action.payload= users.js의 userInfo.cart <=   res.status(200).send(userInfo.cart)\n})});case GET_CART_ITEMS://4) user_actions.js 의 return response.data가 cartDetail:action.payload로 들어오게 됨\nreturn _objectSpread({},state,{cartDetail:action.payload});//4) user_actions.js 의 return response.data가 cartDetail:action.payload로 들어오게 됨\ncase REMOVE_CART_ITEM:return _objectSpread({},state,{cartDetail:action.payload.productInfo,userData:_objectSpread({},state.userData,{cart:action.payload.cart})});case ON_SUCCESS_BUY:return _objectSpread({},state,{cartDetail:action.payload.cartDetail,userData:_objectSpread({},state.userData,{cart:action.payload.cart})});//router.post('/successBuy',auth,(req,res) => { }처리후 state값 채우기,routes/user.js의 action.payload.cartDetail = cartDetail[]\n//처리후 cartPage.js 가기\ndefault:return state;}}","map":{"version":3,"sources":["C:/bensMenu/client/src/_reducers/user_reducer.js"],"names":["LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART","GET_CART_ITEMS","REMOVE_CART_ITEM","ON_SUCCESS_BUY","state","action","type","register","payload","loginSucces","userData","cart","cartDetail","productInfo"],"mappings":"+IAAA,OACIA,UADJ,CAEIC,aAFJ,CAGIC,SAHJ,CAIIC,WAJJ,CAKIC,WALJ,CAMIC,cANJ,CAOIC,gBAPJ,CAQIC,cARJ,KASO,mBATP,CAUA;AAIA,cAAe,WAAyB,IAAhBC,CAAAA,KAAgB,2DAAV,EAAU,IAAPC,CAAAA,MAAO,2CACpC,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKT,CAAAA,aAAL,CACI,wBAAWO,KAAX,EAAkBG,QAAQ,CAAEF,MAAM,CAACG,OAAnC,GACJ,IAAKZ,CAAAA,UAAL,CACI,wBAAYQ,KAAZ,EAAmBK,WAAW,CAAEJ,MAAM,CAACG,OAAvC,GACJ,IAAKV,CAAAA,SAAL,CACI,wBAAWM,KAAX,EAAkBM,QAAQ,CAAEL,MAAM,CAACG,OAAnC,GACJ,IAAKT,CAAAA,WAAL,CACI,wBAAWK,KAAX,EACJ,IAAKJ,CAAAA,WAAL,CACM,wBAAWI,KAAX,EACUM,QAAQ,kBACAN,KAAK,CAACM,QADN,EAEH;AACAC,IAAI,CAACN,MAAM,CAACG,OACb;AAJI,EADlB,GAQN,IAAKP,CAAAA,cAAL,CACI;AACA,wBAAWG,KAAX,EAAiBQ,UAAU,CAACP,MAAM,CAACG,OAAnC,GACA;AACJ,IAAKN,CAAAA,gBAAL,CACI,wBAAWE,KAAX,EAAiBQ,UAAU,CAACP,MAAM,CAACG,OAAP,CAAeK,WAA3C,CACkBH,QAAQ,kBACDN,KAAK,CAACM,QADL,EAEJC,IAAI,CAAEN,MAAM,CAACG,OAAP,CAAeG,IAFjB,EAD1B,GAMH,IAAKR,CAAAA,cAAL,CACI,wBAAWC,KAAX,EAAiBQ,UAAU,CAACP,MAAM,CAACG,OAAP,CAAeI,UAA3C,CACGF,QAAQ,kBACDN,KAAK,CAACM,QADL,EACcC,IAAI,CAACN,MAAM,CAACG,OAAP,CAAeG,IADlC,EADX,GAMD;AACA;AACJ,QACI,MAAOP,CAAAA,KAAP,CAvCR,CAyCH","sourcesContent":["import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEM,\n    ON_SUCCESS_BUY\n} from '../_actions/types';\n//import { onSuccessBuy } from '../_actions/user_actions';\n\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        case ADD_TO_CART:\n              return {...state,\n                        userData:{\n                             ...state.userData,  \n                             //원래있던 useData넣기\n                             cart:action.payload  \n                            //cart에 넣기,action.payload= users.js의 userInfo.cart <=   res.status(200).send(userInfo.cart)\n               }\n            }\n        case GET_CART_ITEMS:\n            //4) user_actions.js 의 return response.data가 cartDetail:action.payload로 들어오게 됨\n            return {...state,cartDetail:action.payload}\n            //4) user_actions.js 의 return response.data가 cartDetail:action.payload로 들어오게 됨\n        case REMOVE_CART_ITEM:\n            return {...state,cartDetail:action.payload.productInfo,\n                              userData:{\n                                  ...state.userData,     \n                                  cart: action.payload.cart \n                              }\n            }\n         case ON_SUCCESS_BUY:\n             return {...state,cartDetail:action.payload.cartDetail,\n                userData:{\n                    ...state.userData,cart:action.payload.cart      \n                }\n                \n            }\n            //router.post('/successBuy',auth,(req,res) => { }처리후 state값 채우기,routes/user.js의 action.payload.cartDetail = cartDetail[]\n            //처리후 cartPage.js 가기\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}