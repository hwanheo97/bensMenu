{"ast":null,"code":"var _jsxFileName = \"C:\\\\boilerplate-mern-stack-master\\\\client\\\\src\\\\components\\\\views\\\\LandingPage\\\\LandingPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { FaCode } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { Icon, Col, Card, Row, Carousel } from 'antd';\nimport Meta from 'antd/lib/card/Meta';\nimport ImageSlider from '../../utils/ImageSlider';\n\nfunction LandingPage() {\n  const [Products, setProducts] = useState([]);\n  const [Skip, setSkip] = useState(0);\n  const [Limit, setLimit] = useState(8);\n  useEffect(() => {\n    //body에 넣어 request로 같이 보내기\n    let body = {\n      skip: Skip,\n      limit: Limit\n    }; //함수화 하여 호출\n\n    getProducts(body);\n  }, []);\n\n  const getProducts = body => {\n    axios.post('/api/product/products', body).then(response => {\n      if (response.data.success) {\n        console.log(response.data);\n        setProducts(response.data.productInfo);\n      } else {\n        alert(\"상품들을 가져오는데 실패 했습니다.\");\n      }\n    });\n  }; //더보기 버튼 이벤트\n\n\n  const loadMoreHandler = () => {\n    //더보기 버튼 누르면 0 + 8\n    let skip = Skip + Limit; //  loadMore:true  더보기 눌렀을때 정보 추가하여 보내기\n\n    let body = {\n      skip: Skip,\n      limit: Limit,\n      loadMore: true\n    }; //\n\n    getProducts(body); //증가되는 skip setState\n\n    setSkip(skip);\n  };\n\n  const renderCards = Products.map((product, index) => {\n    console.log('product', product);\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 8,\n      xs: 24,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      cover: /*#__PURE__*/React.createElement(ImageSlider, {\n        images: product.images,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 32\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Meta, {\n      title: product.title,\n      description: `$${product.price}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    })));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '75%',\n      margin: '3rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \" REACT\\uB85C \\uC1FC\\uD551\\uBAB0\\uB9CC\\uB4E4\\uAE30\", /*#__PURE__*/React.createElement(Icon, {\n    type: \"rocket\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 39\n    }\n  }), \" \")), /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 16],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, renderCards), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: loadMoreHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"\\uB354\\uBCF4\\uAE30\")));\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["C:/boilerplate-mern-stack-master/client/src/components/views/LandingPage/LandingPage.js"],"names":["React","useEffect","useState","FaCode","axios","Icon","Col","Card","Row","Carousel","Meta","ImageSlider","LandingPage","Products","setProducts","Skip","setSkip","Limit","setLimit","body","skip","limit","getProducts","post","then","response","data","success","console","log","productInfo","alert","loadMoreHandler","loadMore","renderCards","map","product","index","images","title","price","width","margin","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { FaCode } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport {Icon,Col,Card,Row,Carousel} from 'antd'\nimport Meta from 'antd/lib/card/Meta';\nimport ImageSlider from '../../utils/ImageSlider';\n\n\n\nfunction LandingPage() {\n\n    const [Products, setProducts]  =  useState([])\n    const [Skip,setSkip] = useState(0)\n    const [Limit,setLimit] = useState(8)\n\n\n    useEffect(() => {\n       //body에 넣어 request로 같이 보내기\n        let body = {\n            skip:Skip,\n            limit:Limit\n        }\n        //함수화 하여 호출\n        getProducts(body)   \n    },[])\n    const getProducts = (body) =>{\n        axios.post('/api/product/products',body)\n            .then(response =>{\n                if(response.data.success){\n                    console.log(response.data)\n                    setProducts(response.data.productInfo)\n                }else{\n                    alert(\"상품들을 가져오는데 실패 했습니다.\")\n                }\n            })\n    }\n    //더보기 버튼 이벤트\n     const loadMoreHandler = () => {\n        //더보기 버튼 누르면 0 + 8\n        let skip = Skip + Limit\n        \n        //  loadMore:true  더보기 눌렀을때 정보 추가하여 보내기\n        let body = {\n            skip:Skip,\n            limit:Limit,\n            loadMore:true\n        }\n        //\n        getProducts(body)\n        //증가되는 skip setState\n        setSkip(skip)\n    }\n\n    const renderCards = Products.map((product,index) => {\n        console.log('product',product)\n        \n        return  <Col lg={6} md={8} xs={24} key={index}>     \n                    <Card\n                        cover={<ImageSlider images={product.images} />}\n                        >\n                                \n                        <Meta\n                            title={product.title}\n                            description={`$${product.price}`}\n                        ></Meta>\n                    </Card>\n                </Col>\n    })  \n\n   \n    return (\n\n        <div style={{width:'75%', margin:'3rem auto'}} > \n            <div style={{textAlign:'center'}}>\n                    <h2> REACT로 쇼핑몰만들기<Icon type=\"rocket\"></Icon> </h2>\n                \n            </div>\n\n                {/* Filter */}\n                {/* Search */}\n                {/* Cards */}\n                <Row gutter={[16,16]}>\n                    {renderCards}\n                </Row>\n                <div style={{textAlign:'center'}}>\n                    <button onClick={loadMoreHandler}>더보기</button>\n                </div>\n                \n       \n        </div>\n\n    )\n}\n\nexport default LandingPage\n"]},"metadata":{},"sourceType":"module"}