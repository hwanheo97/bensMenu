{"ast":null,"code":"import _slicedToArray from\"C:\\\\bensMenu\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch}from'react-redux';import{getCartItems,removeCartItem,onSuccessBuy}from'../../../_actions/user_actions';import UserCardBlock from'./Sections/UserCardBlock';import{Empty,Result}from'antd';import Paypal from'../../utils/Paypal';function CartPage(props){var dispatch=useDispatch();var _useState=useState(0),_useState2=_slicedToArray(_useState,2),Total=_useState2[0],setTotal=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),ShowTotal=_useState4[0],setShowTotal=_useState4[1];// true일때만 가격 보여주기,처음에 안보여야 해서 false\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),ShowSuccess=_useState6[0],setShowSuccess=_useState6[1];useEffect(function(){var cartItems=[];//redux User state안에 cart안에 상품이 들어있는 지 확인\nif(props.user.userData&&props.user.userData.cart){if(props.user.userData.cart.length>0){props.user.userData.cart.forEach(function(item){cartItems.push(item.id);});dispatch(getCartItems(cartItems,props.user.userData.cart)).then(function(response){calculateTotal(response.payload);});//console.log('CartPage' , response)) \n}}},[props.user.userData]);var calculateTotal=function calculateTotal(cartDetail){var total=0;//Objects, {} in JavaScript does not have the method .map(). It's only for Arrays, [].\n//→ 오브젝트는 map()함수를 가지고있지 않아 사용할 수가 없다. 배열만 가능하다.\n//→ data.map()으로 썻으면 data.product.map()으로 코드를 바꿔라 왜냐면 product가 배열이니깐 잘 반복될거야\ncartDetail.map(function(item){total+=parseInt(item.price,10)*item.quantity;});setTotal(total);setShowTotal(true);};var removeFromCart=function removeFromCart(productId){//2) redux action =removeCartItem  => user_actions.js의 export function removeCartItem\ndispatch(removeCartItem(productId)).then(function(response){//console.log('remove버튼 response',response)\nif(response.payload.productInfo.length<=0){setShowTotal(false);}});};var transactionSuccess=function transactionSuccess(data){dispatch(onSuccessBuy({paymentData:data,cartDetail:props.user.cartDetail})).then(function(response){if(response.payload.success){setShowTotal(false);setShowSuccess(true);}});};return/*#__PURE__*/React.createElement(\"div\",{style:{width:'85%',margin:'3rem auto'}},/*#__PURE__*/React.createElement(\"h1\",null,\"My Cart \"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(UserCardBlock,{products:props.user.cartDetail,removeItem:removeFromCart})),ShowTotal?/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'3rem'}},/*#__PURE__*/React.createElement(\"h2\",null,\"Total Amount : $\",Total)):ShowSuccess?/*#__PURE__*/React.createElement(Result,{status:\"success\",title:\"Successfully Purchased Items\"}):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Empty,{description:false}),/*#__PURE__*/React.createElement(\"br\",null)),ShowTotal&&/*#__PURE__*/React.createElement(Paypal,{total:Total,onSuccess:transactionSuccess}));}export default CartPage;","map":{"version":3,"sources":["C:/bensMenu/client/src/components/views/CartPage/CartPage.js"],"names":["React","useEffect","useState","useDispatch","getCartItems","removeCartItem","onSuccessBuy","UserCardBlock","Empty","Result","Paypal","CartPage","props","dispatch","Total","setTotal","ShowTotal","setShowTotal","ShowSuccess","setShowSuccess","cartItems","user","userData","cart","length","forEach","item","push","id","then","response","calculateTotal","payload","cartDetail","total","map","parseInt","price","quantity","removeFromCart","productId","productInfo","transactionSuccess","data","paymentData","success","width","margin","marginTop"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from 'react'\r\nimport {useDispatch} from 'react-redux';\r\nimport {getCartItems, removeCartItem, onSuccessBuy} from '../../../_actions/user_actions';\r\nimport UserCardBlock from './Sections/UserCardBlock';\r\nimport { Empty,Result } from 'antd';\r\nimport Paypal from '../../utils/Paypal';\r\n\r\nfunction CartPage(props) {\r\n \r\n  const dispatch = useDispatch();\r\n\r\n  const [Total,setTotal] =useState(0)\r\n  const [ShowTotal,setShowTotal] = useState(false) \r\n  // true일때만 가격 보여주기,처음에 안보여야 해서 false\r\n  const [ShowSuccess,setShowSuccess] = useState(false)\r\n\r\n  useEffect(() =>{\r\n   \r\n    let cartItems = []\r\n\r\n    //redux User state안에 cart안에 상품이 들어있는 지 확인\r\n    if(props.user.userData && props.user.userData.cart){\r\n        if(props.user.userData.cart.length > 0){\r\n          props.user.userData.cart.forEach(item => {\r\n              cartItems.push(item.id)\r\n          })\r\n          dispatch(getCartItems(cartItems, props.user.userData.cart))\r\n             .then(response =>  {calculateTotal(response.payload)})  //console.log('CartPage' , response)) \r\n       }\r\n    }\r\n  },[props.user.userData])\r\n\r\n  let calculateTotal =(cartDetail) =>{\r\n    let total =0;\r\n//Objects, {} in JavaScript does not have the method .map(). It's only for Arrays, [].\r\n//→ 오브젝트는 map()함수를 가지고있지 않아 사용할 수가 없다. 배열만 가능하다.\r\n//→ data.map()으로 썻으면 data.product.map()으로 코드를 바꿔라 왜냐면 product가 배열이니깐 잘 반복될거야\r\n\r\n    cartDetail.map(item => {\r\n      total += parseInt(item.price, 10) * item.quantity\r\n    })\r\n    setTotal(total)\r\n    setShowTotal(true)\r\n  }\r\n\r\n  let removeFromCart = (productId) => {\r\n    //2) redux action =removeCartItem  => user_actions.js의 export function removeCartItem\r\n    dispatch(removeCartItem(productId))\r\n    .then(response =>{\r\n      //console.log('remove버튼 response',response)\r\n      if(response.payload.productInfo.length <=0){\r\n        setShowTotal(false)\r\n\r\n      }\r\n\r\n    })\r\n  }\r\n    const transactionSuccess = (data) => {\r\n      dispatch(onSuccessBuy({       \r\n         paymentData : data,     \r\n        cartDetail : props.user.cartDetail    \r\n\r\n      }))\r\n        .then(response => {\r\n        if(response.payload.success){\r\n          setShowTotal(false)    \r\n          setShowSuccess(true)   \r\n        }\r\n      })\r\n    }\r\n\r\n  return (\r\n    <div style={{width:'85%', margin:'3rem auto'}}>\r\n        <h1>My Cart </h1>\r\n        <div>\r\n          <UserCardBlock products={props.user.cartDetail} removeItem={removeFromCart}/>\r\n          {/* //3)redux 간단하게 product.js수정경우 products={props.user.cartDetail  && props.user.cartDetail.product}중 && props.user.cartDetail.product 없애도 됨 */}\r\n        </div>\r\n\r\n        {ShowTotal ?\r\n            <div style={{marginTop:'3rem'}}>\r\n            <h2>Total Amount : ${Total}</h2>\r\n          </div>\r\n          : ShowSuccess ?\r\n             <Result\r\n              status=\"success\"\r\n              title=\"Successfully Purchased Items\"\r\n            />\r\n          :\r\n          <>\r\n          <br/>\r\n          <br/>\r\n            <Empty description={false}/>\r\n            <br/>\r\n          </>\r\n         \r\n      }\r\n           {/* <p style={{textAlign:'center' ,color:'red'}}>카트에 선택하신 상품이 없습니다</p> */}\r\n            {ShowTotal && \r\n             <Paypal \r\n             total = {Total}\r\n             onSuccess={transactionSuccess}\r\n             />\r\n            \r\n            }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartPage\r\n"]},"metadata":{},"sourceType":"module"}