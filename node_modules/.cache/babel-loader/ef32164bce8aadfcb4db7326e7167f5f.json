{"ast":null,"code":"import _slicedToArray from\"C:\\\\bensMenu\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Typography,Button,Form,Input}from'antd';import FileUpload from'../../utils/FileUpload';import Axios from'axios';var TextArea=Input.TextArea;// step 1 UploadPage  만들기 \n// const Continents = [\n//     { key: 1, value: \"Africa\" },\n//     { key: 2, value: \"Europe\" },\n//     { key: 3, value: \"Asia\" },\n//     { key: 4, value: \"North America\" },\n//     { key: 5, value: \"South America\" },\n//     { key: 6, value: \"Australia\" },\n//     { key: 7, value: \"Antarctica\" }\n// ]\nvar Countries=[{key:1,value:\"Korean\"},{key:2,value:\"Western\"},{key:3,value:\"Chinese\"},{key:4,value:\"Japanese\"},{key:5,value:\"Others\"}];function UploadProductPage(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),Title=_useState2[0],setTitle=_useState2[1];// event 발생시 setTitle 함수로 State값을 변경해 Title에 넣어 준다 => server쪽에 보낼 모든 정보들\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),Description=_useState4[0],setDescription=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),Price=_useState6[0],setPrice=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),Country=_useState8[0],setCountry=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),Images=_useState10[0],setImages=_useState10[1];//event를 이용 setTitle로 Title값을 바꿔줌\nvar titleChangeHandler=function titleChangeHandler(event){setTitle(event.currentTarget.value);// event 발생시 setTitle 함수로 State값을 변경해 Title에 넣어 준다\n};var descriptionChangeHandler=function descriptionChangeHandler(event){setDescription(event.currentTarget.value);};var priceChangeHandler=function priceChangeHandler(event){setPrice(event.currentTarget.value);};var continentChangeHandler=function continentChangeHandler(event){setCountry(event.currentTarget.value);};//console.log('Countrys key',Country)\nvar updateImages=function updateImages(newImages){//Fileupload에서 올린 newImages를 받아와 UploadProductPage의 setImages로 state값 넣기\nsetImages(newImages);};var submitHandler=function submitHandler(event){event.preventDefault();//모든 state값 채워야 넘어가게 설정\nif(!Title||!Description||!Price||!Country||Images.length===0){return alert(\" 모든 값을 넣어주셔야 합니다.\");}//서버에 채운 값들을 request로 보낸다.\nvar body={//로그인 된 사람의 ID , hoc/auth.js의 자식 컴포넌트로 props가져오기\nwriter:props.user.userData._id,title:Title,description:Description,price:Price,images:Images,countries:Country};Axios.post('https://bensmenu.herokuapp.com/api/product',body)//backend로 body의 모든 정보 보내기 =>server 쪽 index.js=> routes/product.js\n.then(function(response){if(response.data.success){alert('상품 업로드에 성공 했습니다.');props.history.push('/');//성공을하면 '/' landing page경로로 보내기\n}else{alert('상품 업로드에 실패 했습니다.');}});};return/*#__PURE__*/React.createElement(\"div\",{style:{maxWidth:'700px',margin:'2rem auto'}},/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:'center',marginBottom:'2rem'}},/*#__PURE__*/React.createElement(\"h2\",null,\" \\uC0C1\\uD488 \\uC5C5\\uB85C\\uB4DC\")),/*#__PURE__*/React.createElement(Form,{onSubmit:submitHandler},/*#__PURE__*/React.createElement(FileUpload,{refreshFunction:updateImages}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"label\",null,\"\\uC774\\uB984\"),/*#__PURE__*/React.createElement(Input,{onChange:titleChangeHandler,value:Title}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"label\",null,\"\\uC124\\uBA85\"),/*#__PURE__*/React.createElement(TextArea,{onChange:descriptionChangeHandler,value:Description}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"label\",null,\"\\uAC00\\uACA9($)\"),/*#__PURE__*/React.createElement(Input,{type:\"number\",onChange:priceChangeHandler,value:Price}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"select\",{onChange:continentChangeHandler,value:Country},\"  \",Countries.map(function(item){return/*#__PURE__*/React.createElement(\"option\",{key:item.key,value:item.key},\" \",item.value,\"  \");})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"\\uD655\\uC778\")));}export default UploadProductPage;","map":{"version":3,"sources":["C:/bensMenu/client/src/components/views/UploadProductPage/UploadProductPage.js"],"names":["React","useState","Typography","Button","Form","Input","FileUpload","Axios","TextArea","Countries","key","value","UploadProductPage","props","Title","setTitle","Description","setDescription","Price","setPrice","Country","setCountry","Images","setImages","titleChangeHandler","event","currentTarget","descriptionChangeHandler","priceChangeHandler","continentChangeHandler","updateImages","newImages","submitHandler","preventDefault","length","alert","body","writer","user","userData","_id","title","description","price","images","countries","post","then","response","data","success","history","push","maxWidth","margin","textAlign","marginBottom","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd';\r\nimport FileUpload from '../../utils/FileUpload';\r\nimport Axios from 'axios';\r\n\r\nconst { TextArea } = Input;\r\n\r\n// step 1 UploadPage  만들기 \r\n// const Continents = [\r\n//     { key: 1, value: \"Africa\" },\r\n//     { key: 2, value: \"Europe\" },\r\n//     { key: 3, value: \"Asia\" },\r\n//     { key: 4, value: \"North America\" },\r\n//     { key: 5, value: \"South America\" },\r\n//     { key: 6, value: \"Australia\" },\r\n//     { key: 7, value: \"Antarctica\" }\r\n// ]\r\nconst Countries = [\r\n    { key: 1, value: \"Korean\" },\r\n    { key: 2, value: \"Western\" },\r\n    { key: 3, value: \"Chinese\" },\r\n    { key: 4, value: \"Japanese\" },\r\n    { key: 5, value: \"Others\" }\r\n]\r\nfunction UploadProductPage(props) {\r\n\r\n    const [Title, setTitle] = useState(\"\")    // event 발생시 setTitle 함수로 State값을 변경해 Title에 넣어 준다 => server쪽에 보낼 모든 정보들\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Price, setPrice] = useState(0)\r\n    const [Country, setCountry] = useState(1)\r\n    const [Images, setImages] = useState([])\r\n\r\n    //event를 이용 setTitle로 Title값을 바꿔줌\r\n    const titleChangeHandler = (event) => {\r\n        setTitle(event.currentTarget.value)   // event 발생시 setTitle 함수로 State값을 변경해 Title에 넣어 준다\r\n    }\r\n    const descriptionChangeHandler = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n    const priceChangeHandler = (event) => {\r\n        setPrice(event.currentTarget.value)\r\n    }\r\n    const continentChangeHandler = (event) => {\r\n        setCountry(event.currentTarget.value)\r\n    }\r\n    //console.log('Countrys key',Country)\r\n    const updateImages = (newImages) => {  //Fileupload에서 올린 newImages를 받아와 UploadProductPage의 setImages로 state값 넣기\r\n        setImages(newImages)\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        //모든 state값 채워야 넘어가게 설정\r\n        if (!Title || !Description || !Price || !Country || Images.length === 0) {\r\n            return alert(\" 모든 값을 넣어주셔야 합니다.\")\r\n        }\r\n        //서버에 채운 값들을 request로 보낸다.\r\n        const body = {\r\n            //로그인 된 사람의 ID , hoc/auth.js의 자식 컴포넌트로 props가져오기\r\n            writer: props.user.userData._id,\r\n            title: Title,\r\n            description: Description,\r\n            price: Price,\r\n            images: Images,\r\n            countries: Country\r\n        }\r\n        Axios.post('https://bensmenu.herokuapp.com/api/product', body)  //backend로 body의 모든 정보 보내기 =>server 쪽 index.js=> routes/product.js\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('상품 업로드에 성공 했습니다.')\r\n                    props.history.push('/')   //성공을하면 '/' landing page경로로 보내기\r\n                } else {\r\n                    alert('상품 업로드에 실패 했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <h2> 상품 업로드</h2>\r\n            </div>\r\n            <Form onSubmit={submitHandler}>\r\n                {/* DropZone */}\r\n                <FileUpload refreshFunction={updateImages} />\r\n                <br />\r\n                <br />\r\n                <label>이름</label>\r\n                <Input onChange={titleChangeHandler} value={Title} />\r\n                <br />\r\n                <br />\r\n                <label>설명</label>\r\n                <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n                <br />\r\n                <br />\r\n                <label>가격($)</label>\r\n                <Input type=\"number\" onChange={priceChangeHandler} value={Price} />\r\n                <br />\r\n                <br />\r\n                 <select onChange={continentChangeHandler} value={Country}>  {/*event가 일어나면 setContinent메소드로 state값 continent값이 바뀜, Country는 키값 1,2,3,4,5 */}\r\n                    {Countries.map(item => (\r\n                        <option key={item.key} value={item.key}> {item.value}  </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <button type=\"submit\">\r\n                    확인\r\n                </button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default UploadProductPage\r\n"]},"metadata":{},"sourceType":"module"}