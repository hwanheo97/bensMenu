{"ast":null,"code":"var _jsxFileName = \"C:\\\\boilerplate-mern-stack-master\\\\client\\\\src\\\\components\\\\views\\\\UploadProductPage\\\\UploadProductPage.js\";\nimport React, { useState } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport FileUpload from '../../utils/FileUpload';\nimport Axios from 'axios';\nconst {\n  TextArea\n} = Input;\nconst Continents = [{\n  key: 1,\n  value: 'Africa'\n}, {\n  key: 2,\n  value: 'Europe'\n}, {\n  key: 3,\n  value: 'Asia'\n}, {\n  key: 4,\n  value: 'Korea'\n}, {\n  key: 5,\n  value: 'Japan'\n}, {\n  key: 6,\n  value: 'America'\n}, {\n  key: 7,\n  value: 'Austria'\n}];\n\nfunction UploadProductPage(props) {\n  const [Title, setTitle] = useState(\"\");\n  const [Description, setDescription] = useState(\"\");\n  const [Price, setPrice] = useState(0);\n  const [Continent, setContinent] = useState(1);\n  const [Images, setImages] = useState([]);\n\n  const titleChangeHandler = event => {\n    setTitle(event.currentTarget.value);\n  };\n\n  const descriptionChangeHandler = event => {\n    setDescription(event.currentTarget.value);\n  };\n\n  const priceChangeHandler = event => {\n    setPrice(event.currentTarget.value);\n  };\n\n  const continentsChangeHandler = event => {\n    setContinent(event.currentTarget.value);\n  }; //FileUpload 에서 변경된 newImages이자 넣어 updateImages\n  //위의 state의 Images를 newImages로 setImages\n\n\n  const updateImages = newImages => {\n    setImages(newImages);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!Title || !Description || !Price || !Continent || Images === 0) {\n      return alert(\"모든 값을 넣어 주셔야합니다.\");\n    } //서버에 채운 값들을 request로 backend 로 보낸다\n    //로그인 된 사람의 정보, redux에 있는 로그인정보 또는 auth.js 의 {user}정보 가져오기\n    //auth.js 의 {user}정보를 props이용 가져오기\n\n\n    const body = {\n      writer: props.user.userData._id,\n      title: Title,\n      description: Description,\n      price: Price,\n      images: Images,\n      continents: Continent\n    }; // 서버쪽 routes/product.js에 router 만들기\n    //landing page로 보내기:props.history.push('/')         \n\n    Axios.post('./api/product', body).then(response => {\n      if (response.data.success) {\n        alert('상품 업로드에 성공 했습니다.');\n        props.history.push('/');\n      } else {\n        alert('상품 업로드에 실패 했습니다.');\n      }\n    });\n  }; //end of submitHandler()\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: '700px',\n      margin: '2rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"\\uC5EC\\uD589\\uC0C1\\uD488 \\uC5C5\\uB85C\\uB4DC\")), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(FileUpload, {\n    refreshFunction: updateImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"\\uC774\\uB984\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: titleChangeHandler,\n    value: Title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"\\uC124\\uBA85\"), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: descriptionChangeHandler,\n    value: Description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"\\uAC00\\uACA9($)\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    onChange: priceChangeHandler,\n    value: Price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: continentsChangeHandler,\n    value: Continent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, Continents.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.key,\n    value: item.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 16\n    }\n  }, item.value))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \" \\uD655\\uC778 \")));\n}\n\nexport default UploadProductPage;","map":{"version":3,"sources":["C:/boilerplate-mern-stack-master/client/src/components/views/UploadProductPage/UploadProductPage.js"],"names":["React","useState","Button","Form","Input","FileUpload","Axios","TextArea","Continents","key","value","UploadProductPage","props","Title","setTitle","Description","setDescription","Price","setPrice","Continent","setContinent","Images","setImages","titleChangeHandler","event","currentTarget","descriptionChangeHandler","priceChangeHandler","continentsChangeHandler","updateImages","newImages","submitHandler","preventDefault","alert","body","writer","user","userData","_id","title","description","price","images","continents","post","then","response","data","success","history","push","maxWidth","margin","textAlign","marginBottom","map","item"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport{Button,Form,Input} from 'antd';\r\nimport FileUpload from '../../utils/FileUpload';\r\nimport Axios from 'axios';\r\nconst {TextArea} =Input;\r\n\r\n\r\n\r\nconst Continents =[\r\n  {key:1, value:'Africa'},\r\n  {key:2, value:'Europe'},\r\n  {key:3, value:'Asia'},\r\n  {key:4, value:'Korea'},\r\n  {key:5, value:'Japan'},\r\n  {key:6, value:'America'},\r\n  {key:7, value:'Austria'}\r\n]\r\n\r\nfunction UploadProductPage(props) {\r\n\r\n  const [Title,setTitle] = useState(\"\")\r\n  const [Description, setDescription] = useState(\"\")\r\n  const [Price, setPrice] = useState(0)\r\n  const [Continent, setContinent] = useState(1)\r\n  const [Images,setImages] = useState([])\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setTitle(event.currentTarget.value)\r\n  }\r\n  const descriptionChangeHandler = (event) => {\r\n    setDescription(event.currentTarget.value)\r\n  }\r\n  const priceChangeHandler = (event) => {\r\n    setPrice(event.currentTarget.value)\r\n  }\r\n  const continentsChangeHandler = (event) => {\r\n    setContinent(event.currentTarget.value)\r\n  }\r\n  //FileUpload 에서 변경된 newImages이자 넣어 updateImages\r\n  //위의 state의 Images를 newImages로 setImages\r\n  const updateImages =(newImages) => {   \r\n    setImages(newImages)    \r\n  } \r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if(!Title || !Description || !Price || !Continent || Images===0){\r\n      return alert(\"모든 값을 넣어 주셔야합니다.\")\r\n    }\r\n    //서버에 채운 값들을 request로 backend 로 보낸다\r\n    //로그인 된 사람의 정보, redux에 있는 로그인정보 또는 auth.js 의 {user}정보 가져오기\r\n    //auth.js 의 {user}정보를 props이용 가져오기\r\n    const body = {\r\n      writer:props.user.userData._id,  \r\n      title:Title,\r\n      description:Description,\r\n      price:Price,\r\n      images:Images,\r\n      continents:Continent\r\n    }\r\n     // 서버쪽 routes/product.js에 router 만들기\r\n     //landing page로 보내기:props.history.push('/')         \r\n     Axios.post('./api/product',body)     \r\n        .then(response => {\r\n          if(response.data.success){\r\n            alert('상품 업로드에 성공 했습니다.')\r\n            props.history.push('/')         \r\n          }else{\r\n            alert('상품 업로드에 실패 했습니다.')\r\n          }\r\n        })    \r\n  }  \r\n  //end of submitHandler()\r\n \r\n  return (\r\n    <div style={{maxWidth:'700px', margin:'2rem auto'}}>\r\n      <div style={{textAlign:'center',marginBottom:'2rem'}}>\r\n        <h2>여행상품 업로드</h2>\r\n      </div>\r\n\r\n       <Form onSubmit={submitHandler}> \r\n          {/* event 발생 */}\r\n          {/* DropZone */}\r\n\r\n          <FileUpload refreshFunction={updateImages}></FileUpload>\r\n          {/* FileUpload 의 이미지 변경 내용을 갖고 오기위해 props 주기 =>  */}\r\n          <br/>\r\n          <br/>\r\n          <label>이름</label>\r\n          <Input onChange={titleChangeHandler} value={Title} ></Input>\r\n          <br/>\r\n          <br/>\r\n          <label>설명</label>\r\n          <TextArea onChange = {descriptionChangeHandler} value ={Description} ></TextArea>\r\n          <br/>\r\n          <br/>\r\n          <label>가격($)</label>\r\n          <Input type=\"number\" onChange = {priceChangeHandler} value={Price} ></Input>\r\n          <br/>\r\n          <br/>\r\n          <select onChange = { continentsChangeHandler} value={Continent}>\r\n            {Continents.map(item => (\r\n               <option key={item.key} value={item.key}>{item.value}</option>\r\n            ))}\r\n           \r\n\r\n          </select>\r\n          <br/>\r\n          <br/>\r\n      \r\n          <button type=\"submit\" > 확인 </button>\r\n                      \r\n\r\n      </Form>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadProductPage\r\n"]},"metadata":{},"sourceType":"module"}